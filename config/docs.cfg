// This CubeScript file has been automatically generated from AssaultCube's ./docs/reference.xml
// DO NOT MODIFY THIS FILE - Instead, modify ./docs/reference.xml and generate this file automatically.
// To generate this file automatically, please carefully read the comment at the top of reference.xml

docsection [CubeScript]
docident [!] [Performs a negation.];
docargument [A] [argument] [] [0];
docident [!=] [Determines if two values are not equal.];
docargument [A] [first value] [] [0];
docargument [B] [second value] [] [0];
docident [!=f] [Determines if the first floating-point value is not equal to the second floating-point value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [&&] [logical AND.];
docargument [A] [first value] [] [0];
docargument [B] [second value] [] [0];
docexample [echo (&& 1 1)] [Output: 1];
docexample [echo (&& 1 0)] [Output: 0];
docident [*] [Performs a multiplication.];
docargument [A] [the multiplicand] [] [0];
docargument [B] [the multiplier] [] [0];
docident [*=] [Multiplies an alias by a value.];
docargument [A] [the alias to be multiplied] [] [0];
docargument [B] [the multiplier] [] [0];
docremark [Example: *= foo 1337];
docident [*=f] [Multiplies an alias by a floating-point value.];
docargument [A] [the alias to be multiplied] [] [0];
docargument [B] [the multiplier] [] [0];
docremark [Example: *=f foo 13.37];
docident [*f] [Performs a floating point multiplication.];
docargument [A] [the multiplicand] [] [0];
docargument [B] [the multiplier] [] [0];
docident [+] [Performs an addition.];
docargument [A] [the first summand] [] [0];
docargument [B] [the second summand] [] [0];
docremark [Example: echo the sum of x and y is (+ $x $y)];
docident [++] [Increments an alias by 1.];
docargument [A] [the alias name] [] [0];
docexample [i = 0; ++ i; echo $i] [Output: 1];
docident [++f] [Increments an alias by 1.];
docargument [A] [the alias name] [] [0];
docexample [i = 2.14; ++f i; echo $i] [Output: 3.14];
docident [+=] [Adds a value to an alias.];
docargument [A] [the alias to add to] [] [0];
docargument [B] [value to be added] [] [0];
docremark [Example: += foo 1337];
docident [+=f] [Adds a floating-point value to an alias.];
docargument [A] [the alias to add to] [] [0];
docargument [B] [value to be added] [] [0];
docremark [Example: +=f foo 13.37];
docident [+f] [Adds up two floating-point numbers.];
docargument [A] [the first summand] [float] [0];
docargument [B] [the second summand] [float] [0];
docident [-] [Performs a subtraction.];
docargument [A] [the minuend] [] [0];
docargument [B] [the subtrahend] [] [0];
docident [--] [Decrements an alias by 1.];
docargument [A] [the alias name] [] [0];
docexample [i = 0; -- i; echo $i] [Output: -1];
docident [--f] [Decrements an alias by 1.];
docargument [A] [the alias name] [] [0];
docexample [i = 4.14; --f i; echo $i] [Output: 3.14];
docident [-=] [Subtracts a value from an alias.];
docargument [A] [the alias to subtract from] [] [0];
docargument [B] [value to be subtracted] [] [0];
docremark [Example: -= foo 1337];
docident [-=f] [Subtracts a floating-point value from an alias.];
docargument [A] [the alias to subtract from] [] [0];
docargument [B] [value to be subtracted] [] [0];
docremark [Example: -=f foo 13.37];
docident [-f] [Subtracts two floating-point numbers.];
docargument [A] [the minuend] [float] [0];
docargument [B] [the subtrahend] [float] [0];
docident [<] [Determines if a value is smaller than a second value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [<=] [Determines if a values is less than or equal than a second value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [<=f] [Compares if a particular floating-point value is less than or equal to another floating-point value.];
docargument [A] [The first value.] [] [0];
docargument [B] [The second value.] [] [0];
docident [<f] [Compares if a particular floating-point value is smaller than another floating-point value.];
docargument [A] [The first value.] [] [0];
docargument [B] [The second value.] [] [0];
docident [=] [Determines if two values are equal.];
docargument [A] [first value] [] [0];
docargument [B] [second value] [] [0];
docexample [echo there are only (concatword (= 1 1) (= 1 0)) types of people in the world] [Output: there are only 10 types of people in the world];
docident [=f] [Compares if a particular floating-point value is equal to another floating-point value.];
docargument [A] [The first value.] [] [0];
docargument [B] [The second value.] [] [0];
docident [>] [Determines if a value is bigger than a second value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [>=] [Determines if a values is greater than or equal than a second value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [>=f] [Determines if the first floating-point value is greater than or equal to the second floating-point value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [>f] [Determines if the first floating-point value is greater than the second floating-point value.];
docargument [A] [the first value] [] [0];
docargument [B] [the second value] [] [0];
docident [add2alias] [This will append the passed 2nd argument to any existing content of the alias named in the 1st argument. Several popular aliases have predefined shortcuts using this scriptalias: addOnQuit, addOnLoadOnce, addOnLoadAlways. Check config/scripts.cfg for possible omissions in that list.];
docexample [foo = "one" add2alias foo two echo foo] [Output: one two];
docident [add2bind] [Adds a block of code, if it does not already exist, to a keybind.];
docargument [K] [the key to add to] [] [0];
docargument [C] [the code to add] [] [0];
docident [add2list] [Appends a new element to a list.];
docargument [A] [the alias (list) to add to] [] [0];
docargument [E] [the new element to add] [] [0];
docexample [tmp_list = []; add2list tmp_list Hello; add2list tmp_list world!; echo $tmp_list] [Output: Hello world!];
docident [addpunct] [Injects CubeScript punctuation.];
docargument [S] [a string] [] [0];
docargument [N] [type ID] [min 0/max 5/default 0] [0];
docexample [echo (addpunct hello)] [Output: "hello"];
docexample [echo (addpunct hello 1)] [Output: [hello]];
docexample [echo (addpunct hello 2)] [Output: (hello)];
docexample [echo (addpunct hello 3)] [Output: $hello];
docexample [echo (addpunct "" 4)] [];
docexample [echo (addpunct "" 5)] [Output: %];
docexample [test = (concat echo (addpunct fov 3)); test] [Output: 90.0];
docident [alias] [Binds a name to commands.];
docargument [N] [the name of the alias] [string, must not contain '$'] [0];
docargument [A] [the commands] [string] [0];
docexample [alias myalias [ echo "hello world"; alias myalias [ echo "I already said hello" ] ]] [It is possible to re-bind an alias, even during its evaluation.];
docexample [test = [ echo "successful" ]] [There is also the shorthand version of defining an alias via the "="-sign.];
docident [aliasinit] [Initializes a group of aliases using checkinit.];
docargument [L] [the list of aliases to check for] [] [0];
docargument [B] [the block of code to ensure the aliases contain] [] [0];
docident [at] [Grabs a word out of a string.];
docargument [S] [the string] [] [0];
docargument [N] [the index of the word] [] [0];
docexample [echo (at "zero one two three" 2)] [output: two];
docident [break] [Aborts a loop created with a 'loop', 'looplist' or 'while' command.];
docexample [loop i 10 [ if (= $i 4) [ break ]; echo $i]] [output: 0 1 2 3];
docident [breakparse] [Breaks out of a parsestring loop.];
docremark [Important: This command should only be used within the 3rd argument (the cubescript to execute) of parsestring.];
docident [c] [Adds color to a string.];
docargument [N] [color id] [0 min, 9 max] [0];
docexample [echo (c 3)Hello (c 0)world!] [Output: a red "Hello" and a green "world!"];
docident [ceil] [Upper value of a float number];
docargument [F] [The float number to get the ceil from] [] [0];
docident [check2init] [Defines an alias only if it does not already exist.];
docargument [A] [alias name] [] [0];
docargument [V] [alias value] [] [0];
docident [check2initlist] [Uses check2init on a list of aliases.];
docargument [L] [list of alias names] [] [0];
docargument [V] [alias value] [] [0];
docident [checkalias] [Determines if the argument given is an existing alias or not.];
docargument [A] [the alias to check for] [] [0];
docexample [hello = ""; echo (checkalias hello)] [Output: 1];
docexample [echo (checkalias oMgThIsAlIaSpRoLlYdOeSnTeXiSt)] [Output: 0];
docident [checkinit] [Ensures the initialization of an alias.];
docargument [A] [the alias to check for] [] [0];
docargument [B] [the block of code to ensure that the alias contains] [] [0];
docexample [checkinit mapstartalways] [Output: if alias mapstartalways does not exist, this command initializes it.];
docexample [checkinit mapstartalways [ echo New map, good luck! ]] [Output: if alias mapstartalways does not exist, it is initialized, and if the block of code "[ echo New map, good luck! ]" does not exist within the aliases contents, this command adds it.];
docident [concat] [Concatenates multiple strings with spaces inbetween.];
docargument [S] [the first string] [] [0];
docargument [...] [collection of strings to concatenate] [] [1];
docexample [alias a "hello"; echo (concat $a "world")] [output: hello world];
docident [concatword] [Concatenates multiple strings.];
docargument [S] [the first string] [] [0];
docargument [...] [collection of strings to concatenate] [] [1];
docremark [The newly created string is saved to the alias 's'.];
docexample [alias a "Cube"; echo (concatword $a "Script")] [output: CubeScript];
docident [const] [Set an alias as a constant.];
docargument [N] [the name of the alias] [string, must not contain '$'] [0];
docargument [A] [the value] [string] [0];
docremark [A constant cannot be redefined : its value cannot be changed.];
docremark [To get rid of a constant, use delalias];
docexample [myalias = myvalue; const myalias;] [Set "myalias" value to "myvalue" then "lock" it as a constant.];
docexample [const myalias myvalue;] [You can directly set a value for your alias when you define it as a constant.];
docexample [const myalias myvalue; myalias = anothervalue;] [Assigning a value to a const will throw you an error. Output: myalias is already defined as a constant];
docident [continue] [Skip current loop iteration.];
docexample [loop i 5 [ if (= $i 2) [ continue ]; echo $i]] [output: 0 1 3 4];
docident [convertcase] [Converts a list of strings to lowercase or uppercase characters.];
docargument [N] [0 - use lowercase, 1 - use uppercase] [min 0/max 1] [0];
docargument [...] [a list of strings] [] [0];
docremark [This command can handle up to 23 string arguments.];
docexample [echo (convertcase 0 ZERO ONE TWO THREE)] [Output: zero one two three];
docexample [echo (convertcase 1 zero one two three)] [Output: ZERO ONE TWO THREE];
docident [curplayers] [Returns the current number of players.];
docremark [The return value includes the local player "(you)", and works in both singleplayer and multiplayer scenarios.];
docident [div] [Performs an integer division.];
docargument [A] [the dividend] [] [0];
docargument [B] [the divisor] [] [0];
docident [div=] [Divides an alias by a value.];
docargument [A] [the alias to be divided] [] [0];
docargument [B] [the divisor] [] [0];
docremark [Example: div= foo 1337];
docident [div=f] [Divides an alias by a floating-point value.];
docargument [A] [the alias to be divided] [] [0];
docargument [B] [the divisor] [] [0];
docremark [Example: div=f foo 13.37];
docident [divf] [Performs a division with floating-point precision.];
docargument [A] [] [the dividend] [0];
docargument [B] [] [the divisor] [0];
docident [execute] [Executes the specified string as CubeScript.];
docargument [S] [the string to execute] [] [0];
docexample [execute (concat echo (addpunct fov 3))] [Example output: 90.0];
docident [findcn] [find client number (cn)];
docargument [N] [NAME] [] [0];
docident [findkey] [Returns the name of a key via a specified code.];
docargument [I] [integer] [] [0];
docremark [Returns -255 if the key does not exist.];
docremark [See /config/keymap.cfg for a full list of valid key codes.];
docexample [echo (findkey 8)] [Output: BACKSPACE];
docexample [echo (findkey 280)] [Output: PAGEUP];
docident [findkeycode] [Returns the integer code of a key.];
docargument [K] [the name of the key] [] [0];
docremark [Returns -255 if the key does not exist.];
docremark [See /config/keymap.cfg for a full list of valid key names.];
docexample [echo (findkeycode BACKSPACE)] [Output: 8];
docexample [echo (findkeycode PAGEUP)] [Output: 280];
docident [findlist] [Searches a list for a specified value.];
docargument [L] [the list] [] [0];
docargument [I] [the item to find] [] [0];
docident [findpn] [find player name];
docargument [C] [CLIENTNUM] [] [0];
docident [floor] [Floor value of a float number];
docargument [F] [The float number to get the floor from] [] [0];
docident [forceinit] [Forcibly sets a list of aliases to a specified value.];
docargument [L] [list of alias names] [] [0];
docargument [V] [alias value] [] [0];
docexample [alias1 = 0; alias2 = 0; alias3 = 0; alias4 = 0; alias 5 = 0] [Can be written as:];
docexample [forceinit [alias1 alias2 alias3 alias4 alias5] 0] [];
docident [format] [];
docargument [F] [format] [use %1..%9 for the values] [0];
docargument [V] [value(s)] [] [0];
docexample [echo (format "%1 bottles of %2 on the %3, %1 bottles of %2!" 99 beer wall)] [output: 99 bottles of beer on the wall, 99 bottles of beer!];
docident [getalias] [return the value of the alias];
docargument [N] [alias name] [] [0];
docident [highestcn] [Returns the highest valid client number available.];
docident [if] [Controls the script flow based on a boolean expression.];
docargument [cond] [the condition] [0 (false) or anything else (true)] [0];
docargument [true] [the body to execute if the condition is true] [] [0];
docargument [false] [the body to execute if the condition is false] [] [0];
docexample [if (> $x 10) [ echo x is bigger than 10 ] [ echo x too small ]] [];
docident [isIdent] [returns whether or not there is an identifier by that name];
docargument [N] [identifier name] [] [0];
docident [isconst] [Determines if the argument given is a constant or not.];
docargument [A] [the alias to check for] [] [0];
docexample [const hello ""; echo (isconst hello)] [Output: 1];
docexample [hello = value; echo (isconst hello)] [Output: 0];
docident [keybind] [Returns the contents of a keybind.];
docargument [K] [name of key] [] [0];
docident [l0] [leading zeros for the number V to make it W chars wide. It may look like 10 - which might be considered a mnemonic - but it's lowercase-L and 0!];
docargument [W] [WIDTH] [] [0];
docargument [V] [VALUE] [] [0];
docexample [echo (l0 5 1000)] [Output: 01000];
docexample [echo (l0 3 1000)] [Output: 1000];
docident [listaverage] [Returns the average of a list of numbers.];
docargument [L] [the list of numbers] [supports ints and floats] [0];
docexample [echo (listaverage "2 5 5")] [Output: 4.0];
docident [listlen] [returns the element count of the given list.];
docargument [L] [the list] [] [0];
docident [loop] [Loops the specified body.];
docargument [V] [the alias used as counter] [] [0];
docargument [N] [the amount of loops] [] [0];
docargument [body] [the body to execute on each iteration] [] [0];
docremark [This command sets the alias you choose, as first argument, from 0 to N-1 for every iteration.];
docexample [loop i 10 [ echo $i ]] [];
docident [looplist] [Browses a list and executes a body for each element];
docargument [V] [the list to browse] [] [0];
docargument [N] [the alias containing the current element value.] [] [0];
docargument [body] [the body to execute on each iteration] [] [0];
docexample [looplist "zero one two three" number [ echo $number ]] [];
docident [mod] [Performs a modulo operation.];
docargument [A] [the dividend] [] [0];
docargument [B] [the divisor] [] [0];
docident [modf] [Performs a floating-point modulo operation.];
docargument [A] [the dividend] [] [0];
docargument [B] [the divisor] [] [0];
docexample [echo (modf 7.5 12.5)] [Output: 7.5];
docexample [echo (modf 17.5 12.5)] [Output: 5.0];
docident [numargs] [The number of arguments passed to the current alias];
docargument [V] [numargs] [ read-only];
docident [parsestring] [Loops through every character in the given string and executes the given block of cubescript on each iteration.];
docargument [S] [string] [string to parse] [0];
docargument [A] [string] [name of alias to use as iterator] [0];
docargument [C] [string] [cubescript to execute on each iteration] [0];
docargument [B] [integer] [non-zero to force backwards parse] [0];
docremark [Important: A secondary iterator alias (prefixed with a double underscore "__") is automatically created before each iteration that contains the character position data.];
docexample [parsestring "Hello world" iter [echo $iter]] [Uses echo on every character in the string: "Hello world"];
docexample [parsestring "Hello world" iter [echo (concatword "Char #" $__iter ": " $iter)]] [Uses echo on every character in the string: "Hello world" --- Also outputs the position of each character in the string.];
docexample [backwardsstring = []; parsestring "This will look interesting backwards." iter [backwardsstring = (concatword $backwardsstring $iter); if (= $__iter 0) [echo $backwardsstring]] 1] [Outputs: ".sdrawkcab gnitseretni kool lliw sihT"];
docexample [parsestring "abcdefghijklmnopqrstuvwxyz" iter [if (> $__iter 4) breakparse [echo $iter]]] [Example usage of the breakparse command. Uses echo on characters a through e, then breaks out of the parse.];
docident [persistidents] [Controls whether aliases defined afterwards will be saved (1) or not (0). This option is useful to keep saved.cfg free from unneeded clutter.];
docargument [B] [control option] [1...persistent, 0...not persistent] [0];
docexample [persistidents 0; foo = [ echo "bar"]] [foo will not be saved and has to be redefined when restarting AC.];
docexample [persistidents 1; bar = [ echo "foo"]] [bar will be saved and persistent across sessions.];
docident [pop] [Resets a previously pushed alias to it's original value.];
docargument [A] [alias] [] [0];
docexample [pop p; echo $p] [Output: 1];
docident [powf] [Returns A raised to the power of B (floating-point)];
docargument [A] [the mantissa] [] [0];
docargument [B] [the exponent] [] [0];
docident [push] [Temporarily redefines the value of an alias.];
docargument [N] [alias name] [] [0];
docargument [A] [action] [] [0];
docexample [p = 1; push p 2; echo $p] [Output: 2];
docident [resetsleeps] [Resets all current "sleep".];
docident [result] [Sets the result value of a CubeScript block.];
docargument [R] [the result] [] [0];
docident [return] [Sets the result value of a CubeScript block.];
docargument [R] [the result] [] [0];
docident [rnd] [Random value];
docargument [A] [The upper limit of the random value] [] [0];
docident [round] [Round the given float];
docargument [F] [The float number to round] [] [0];
docident [sleep] [Executes a command after specified time period.];
docargument [N] [the amount of milliseconds] [] [0];
docargument [C] [the command to execute] [] [0];
docargument [P] [ignore map change (optionnal)] [] [0];
docexample [sleep 1000 [ echo foo ]] [Prints 'foo' to the screen after 1 second.];
docident [storesets] [Generates an alias (list) of the current values for the given aliases/CVARs.];
docargument [L] [the list of aliases/CVARs] [] [0];
docargument [A] [the alias to store them in] [] [0];
docexample [storesets "sensitivity hudgun fov" tmp] [Example result: stores "3.000 1 120" into alias "tmp".];
docident [strcmp] [Determines if two strings are equal.];
docargument [A] [the first string] [] [0];
docargument [B] [the second string] [] [0];
docexample [if (strcmp yes yes) [echo the two strings are equal] [echo the two strings are not equal]] [Output: the two strings are equal];
docident [strlen] [Returns the length (in characters, including whitespace) of string S.];
docargument [S] [STRING] [] [0];
docexample [echo (strlen "Hello world!")] [Output: 12];
docident [strpos] [Returns the position of a substring into another];
docargument [H] [haystack string] [] [0];
docargument [S] [needle string] [] [0];
docargument [N] [The occurence of 'needle' to find (optionnal)] [] [0];
docremark [Character indexes and occurence number begin at 0.];
docexample [echo (strpos "hello world" "world") 6] [];
docexample [echo (strpos "hello world" "l") 2] [];
docexample [echo (strpos "hello world" "l" 2) 9] [];
docident [strreplace] [Returns a string, with a portion of it replaced with a new sub-string.];
docargument [S] [the original string to modify] [] [0];
docargument [T] [the target sub-string to replace] [] [0];
docargument [N] [the new sub-string to replace the target] [] [0];
docexample [echo (strreplace "Hello cruel world" cruel "")] [Output: Hello world];
docident [strstr] [Determines if string B was found in string A.];
docargument [A] [the first string] [] [0];
docargument [B] [the second string] [] [0];
docexample [if (strstr "Hello world!" Hello) [echo found Hello in Hello world!] [echo did not find Hello in Hello world!]] [Output: found Hello in Hello world!];
docident [substr] [Copies a substring out of the original.];
docargument [S] [the original string] [] [0];
docargument [A] [start position] [] [0];
docargument [L] [substring length (optionnal)] [] [0];
docremark [Character indexes begins at 0. If "start position" is negative, the reference is the end of the string.];
docexample [echo (substr abcdefgh 2 5) cdefg] [];
docexample [echo (substr abcdefgh -3 2) fg] [];
docexample [echo (substr abcdefgh 2) cdefgh] [];
docident [switch] [Takes an integer argument to determine what block of code to execute.];
docargument [I] [integer] [] [0];
docargument [C] [a variable number of 'case' arguments...] [] [0];
docremark [This command can only handle up to 23 'cases'. (because of cubescript's 24 argument limit)];
docexample [switch 2 [echo case 0] [echo case 1] [echo case 2] [echo case 3] [echo case 4]] [Output: case 2];
docident [testchar] [Tests a character argument for various things.];
docargument [C] [the character to test] [] [0];
docargument [N] [type of test to run] [min 0/max 7/default 0] [0];
docremark [See the following c++ functions for more information about the usage of this command:];
docremark [isalpha(), isalnum(), isdigit(), islower(), isprint(), ispunct(), isupper(), and isspace()];
docexample [echo (testchar 1)] [Output: 1 // It is a 0-9 digit];
docexample [echo (testchar a 1)] [Output: 1 // It is a a-z or A-Z character];
docexample [echo (testchar z 2)] [Output: 1 // It is a a-z or A-Z character or 0-9 digit];
docexample [echo (testchar b 3)] [Output: 1 // It is a lowercase a-z character];
docexample [echo (testchar B 4)] [Output: 1 // It is a uppercase A-Z character];
docexample [echo (testchar , 5)] [Output: 1 // It is a printable character];
docexample [echo (testchar . 6)] [Output: 1 // It is a punctuation character];
docexample [echo (testchar " " 7)] [Output: 1 // It is a whitespace character];
docident [tolower] [Converts a string to all lowercase characters.];
docargument [S] [a string] [] [0];
docexample [echo (tolower HELLO)] [Output: hello];
docident [toupper] [Converts a string to all uppercase characters.];
docargument [S] [a string] [] [0];
docexample [echo (toupper hello)] [Output: HELLO];
docident [trimAllUnnecessaryWhitespace] [Removes all unnecessary leading and trailing whitespace characters from the given string.];
docargument [S] [string] [string to modify] [0];
docexample [echo (trimAllUnnecessaryWhitespace " H e ll o w o r l d ")] [Outputs: "H e ll o w o r l d"];
docident [trimAllWhitespace] [Removes all whitespace characters from the given string.];
docargument [S] [string] [string to modify] [0];
docexample [echo (trimAllWhitespace " H e ll o w o r l d ")] [Outputs: Helloworld];
docident [while] [Loops the specified body while the condition evaluates to true.];
docargument [cond] [the condition] [the code evaluated before each iteration] [0];
docargument [body] [the body to execute on each iteration] [] [0];
docremark [This command sets the alias "i" from 0 to N-1 for every iteration. Note that the condition here has to have [], otherwise it would only be evaluated once.];
docexample [alias i 0; while [ (< $i 10) ] [ echo $i; alias i (+ $i 1) ]] [];
docident [||] [logical OR.];
docargument [A] [first value] [] [0];
docargument [B] [second value] [] [0];
docexample [echo (|| 1 0)] [output: 1];
docexample [echo (|| 0 0)] [output: 0];
docsection [General]
docident [addserver] [Adds a server to the list of server to query in the server list menu.];
docargument [S] [the address of the server (hostname or IP)] [] [0];
docargument [P] [the port] [] [0];
docident [allowhudechos] [Enables or disables the ability of hudecho to output text to the heads up display.];
docargument [N] [0 off, 1 on] [min 0/max 1/default 1];
docident [attack] [Fires the current weapon.];
docremark [default: left mouse button];
docident [autogetmap] [Determines if the current played map should be automatically downloaded if it is not available locally.];
docargument [B] [enable auto map download] [min 0/max 1/default 1];
docident [autogetnewmaprevisions] [Automatically get new map revisions from the server.];
docargument [N] [0: no, 1: yes] [min 0/max 1/default 0];
docident [autoscreenshot] [Toggle for taking an automatic screenshot during intermission.];
docargument [B] [0=Off, 1=On] [min 0/max 1/default 1];
docident [backward] [Moves the player backward.];
docremark [default keys: S and Down Arrow];
docident [bind] [Binds a key to a command.];
docargument [K] [the key to bind] [string] [0];
docargument [A] [the command] [string, usually an alias] [0];
docremark [To find out what key names and their default bindings are, look at config/keymap.cfg, then add bind commands to your autoexec.cfg.];
docident [browsefiledesc] [Toggles getting descriptive text from CGZ or DMO files in menudirlist.];
docargument [B] [] [min 0/max 1/default 1];
docident [changeteam] [Swaps your player to the enemy team.];
docident [cleanshot] [Take a "clean" screenshot with no HUD items.];
docremark [Your current HUD configuration is stored into a buffer, and is re-enabled afterwards.];
docident [clearservers] [];
docident [clockerror] [Sets the correction value for clockfix.];
docargument [V] [correction value] [min 990000/max 1010000/default 1000000];
docremark [Engine source-code snippet (main.cpp): if(clockfix) millis = int(millis*(double(clockerror)/1000000));];
docident [clockfix] [Enables correction of the system clock.];
docargument [B] [enable correction] [min 0/max 1/default 0];
docident [connected] [Indicates if a connection to a server exists.];
docargument [B] [the connection state] [1 (connected), 0 (disconnected) min 0/max 1/default 0];
docident [datestring] [representation of date];
docremark [format: Www Mmm dd hh:mm:ss yyyy];
docremark [Use timestamp to create your own formatting.];
docexample [echo (datestring) "Sat Jun 7 17:08:35 2008"] [];
docident [dbgts] [Enable triangle debug.];
docargument [B] [triangle debug] [min 0/max 1/default 0];
docremark [Prints details while connecting triangles of 3d models.];
docident [debugargs] [Dump all command arguments to STDOUT];
docargument [...] [...] [] [1];
docident [echo] [Outputs text to the console.];
docargument [L] [List of strings] [] [0];
docident [editbind] [Similar to bind, but is only active while editing, where it overrides the regular bind for the specified key.];
docargument [K] [the key to bind] [string] [0];
docargument [A] [the command] [string, usually an alias] [0];
docident [exec] [Executes all commands in a specified config file.];
docargument [C] [the config file] [] [0];
docident [forward] [Moves the player forward.];
docremark [default keys: W and Up Arrow];
docident [gamemode] [Holds the current game mode. READ ONLY];
docexample [echo $gamemode] [Output: 5];
docident [getEngineState] [Returns a list of values describing the current engine (rendering) state.];
docremark [It will only be filled after the first frame was drawn.];
docremark [The list is: FPS LOD WQD WVT EVT];
docremark [FPS = Frames Per Second];
docremark [LOD = Level Of Detail];
docremark [WQD = World QuaD Count];
docremark [WVT = World VerTex Count];
docremark [EVT = Extra VerTex Count (HUD & menu)];
docexample [echo (getEngineState)] [];
docident [getmode] [Returns the current game mode.];
docargument [N] [0 = full mode name, 1 = mode acronym] [min 0/max 1/default 0] [0];
docexample [echo (getmode)] [Example output: capture the flag];
docexample [echo (getmode 1)] [Example output: CTF];
docident [getscrext] [Returns the file extension of the client's current screenshottype setting.];
docexample [echo (getscrext)] [Example output: .jpg];
docident [hudecho] [Outputs text to the console and heads up display.];
docargument [L] [List of strings] [] [0];
docident [invmouse] [Sets mouse to "flight sim" mode.];
docargument [B] [sets invmouse] [0 (off), else (on)] [0];
docident [jpegquality] [Sets the JPEG screenshot image quality.];
docargument [N] [Compression level] [min 10/max 100/default 70];
docremark [The image quality is set by it's compression level, a value of 10 sets maximum compression and a small file size but results in a bad quality image];
docremark [while a value of 100 results in a large file but gives the best quality image.];
docident [jump] [Triggers a jump.];
docremark [default keys: space and right mouse.];
docident [keymap] [Sets up the keymap for the specified key.];
docargument [K] [the key to map] [] [0];
docargument [N] [the name for the key] [] [0];
docargument [A] [the default action] [] [0];
docremark [You should never have to use this command manually, use "bind" instead.];
docident [lang] [Sets the language for which a translated server MOTD will be fetched, if the server has one for this language.];
docargument [L] [the language code] [min /max /default ];
docremark [This is always a two-letter language code as defined in the ISO 639 standard, three-letter codes are currently not allowed.];
docremark [If lang is not set, or if the server does not have a matching MOTD file, it will fall back to English.];
docremark [Note: this does not affect the client language, which is derived from the system settings (e.g. on many *nix systems, it may be changed via the "LANG" environment variable).];
docexample [en, de, fr, ...] [];
docident [left] [Moves the player left.];
docremark [default keys: A and Left Arrow];
docident [mapshot] [save an image of the entire radar-overview of the map.];
docident [maxfps] [Limits the FPS (frames per second) of AssaultCube's video output.];
docargument [V] [maximum FPS] [0 disables maxfps min 25 or 0/max 1000/default 200];
docident [maxroll] [Sets the maximum value the display will roll on strafing.];
docargument [N] [the roll value] [min 0/max 20/default 0];
docident [maxtmus] [Gets the maximum number of supported textures when performing multitexturing.];
docargument [V] [max. number of textures] [ read-only];
docident [megabind] [Binds a key to many different actions depending on the current game state.];
docargument [K] [the key to bind] [string] [0];
docargument [D] [body of code to execute if watching a demo] [a body of code] [0];
docargument [E] [body of code to execute if editing or in coop-edit mode] [a body of code] [0];
docargument [C] [body of code to execute if connected to a server] [a body of code] [0];
docargument [B] [body of code to execute if in a bot mode] [a body of code] [0];
docargument [O] [body of code to execute if none of the other arguments have been met] [a body of code] [0];
docremark [This command requires 6 arguments, no less. Use an empty set of brackets [] for any of the arguments that you want to "do nothing".];
docexample [megabind F9 [echo Demo!] [echo Editing or coop!] [echo Connected!] [echo Bots!] [echo Other!]] [];
docident [menudirlist] [create a menu listing of files from a path and perform an action on them when clicked.];
docargument [] [] [] [0];
docremark [use this inside menu definitions, almost always as the only command of that menu.];
docremark [compare the usage inside config/menus.cfg];
docexample [menudirlist "packages/maps" "cgz" "map $arg1"] [will create a list of maps and load them when clicked];
docident [millis] [Returns the number of milliseconds since engine start.];
docexample [echo (millis)] [];
docident [minlod] [Minimal level of detail.];
docargument [V] [] [min 25/max 250/default 60];
docident [modeacronyms] [Toggles use of acronyms instead of full modenames in the serverbrowser.];
docargument [B] [] [min 0/max 1/default 0];
docident [networkdebug] [Enables output of processed network packets.];
docargument [B] [enable network debugging] [min 0/max 1/default 0];
docremark [This variable only has an effect if the client binary is compiled in debug mode.];
docident [numconlines] [Hold the current number of lines on the console.];
docident [onrelease] [Executes a command on the release of a key/button.];
docargument [A] [the command] [] [0];
docremark [This command must be placed in an action in a bind or in an alias in a bind.];
docexample [bind CTRL [ echo "key pressed"; onrelease [ echo "key released" ] ]] [];
docident [physinterp] [Toggles physics interpolation.];
docargument [B] [] [min 0/max 1/default 1];
docident [pngcompress] [Sets the PNG screenshot file compression.];
docargument [N] [Compression level] [min 0/max 9/default 9];
docremark [A value of 9 sets maximum data compression and a smaller file size while a value of 0 results in a large file image, quality is always the same since PNG its a loosless format.];
docident [protocol] [Gets an integer representing the game protocol. READ ONLY];
docremark [As example, the protocol of version 1.1.0.4 is represented as value 1132.];
docident [quit] [Quits the game without asking.];
docident [registermusic] [registers a track as music - the first three tracks have special meaning. Track #1 is for "flag grab" the second and third are used as "last minute" tracks.];
docargument [M] [music file] [] [0];
docident [resetbinds] [Resets all binds back to their default values.];
docremark [This command executes the file /config/resetbinds.cfg which will bind all keys to the values specified in that file, thus resetting the binds to their default values.];
docident [resetcfg] [Determines if all settings should be reset when the game quits.];
docargument [B] [enable reset] [min 0/max 1/default 0];
docremark [It is recommended to quit the game immediately after enabling this setting. Note that the reset happens only once as the value of this variable is reset as well.];
docident [resetsecuremaps] [Clears the list of secured maps.];
docident [right] [Moves the player right.];
docremark [default keys: D and Right Arrow];
docident [run] [Executes a config file within /config/];
docargument [N] [the file name (without extension)] [] [0];
docident [screenshot] [Takes a screenshot.];
docremark [Screenshots are saved to "screenshots/[date]_[time]_[map]_[mode].[ext]", where [ext] is the image type selected.];
dockey [F12] [] [];
docident [screenshotscale] [Scales screenshots by the given factor before saving. 1 = original size, 0.5 = half size, etc.];
docargument [S] [Scale] [min 0.1/max 1/default 1];
docident [screenshottype] [Toggle format of screenshot image. Your choice is for BMP (0), JPEG (1) or PNG (2).];
docargument [T] [0=BMP, 1=JPEG, 2=PNG] [min 0/max 2/default 1];
docident [securemap] [Adds a map to the list of secured maps.];
docargument [S] [the name of the map] [] [0];
docremark [Secured maps can not be overwritten by the commands sendmap and getmap.];
docident [sensitivity] [Sets the mouse sensitivity.];
docargument [S] [the sensitivity] [floating-point] [0];
docident [smoothdist] [Determines the valid distance when extrapolating a players position.];
docargument [V] [distance] [min 0/max 16/default 8];
docident [smoothmove] [Determines the speed when extrapolating a players position.];
docargument [V] [movement speed] [min 0/max 100/default 75];
docident [soundtest] [Plays all hardcoded sounds in order.];
docident [specbind] [Similar to bind, but is only active while spectating, where it overrides the regular bind for the specified key.];
docargument [K] [the key to bind] [string] [0];
docargument [A] [the command] [string, usually an alias] [0];
docident [systime] [seconds since the epoch (00:00:00 UTC on January 1, 1970)];
docexample [echo (systime)] [];
docident [throttle_accel] [Determines how fast network throttling accelerates.];
docargument [V] [acceleration] [min 0/max 32/default 2];
docident [throttle_decel] [Determines how fast network throttling decelerates.];
docargument [V] [deceleration] [min 0/max 32/default 2];
docident [throttle_interval] [Determines the interval of re-evaluating network throttling.];
docargument [V] [interval] [seconds min 0/max 30/default 5];
docident [timestamp] [a list of values for current time];
docremark [format: YYYY mm dd HH MM SS];
docexample [echo (timestamp) "2008 08 08 08 08 08"] [];
docexample [echo (timestamp) "2063 04 05 12 00 00"] [];
docexample [echo (at (timestamp) 0) (at (timestamp) 2) (at (timestamp) 1) "2063 05 04"] [];
docident [timestring] [the current time in (H)H:MM:SS format];
docexample [echo (timestring) "12:34:56"] [];
docexample [echo (timestring) "1:02:03"] [];
docident [toggleconsole] [Toggles the console.];
docident [tsswap] [Swaps vertices of model triangles.];
docargument [V] [] [min 0/max 1/default 1];
docident [updatefrommaster] [Contacts the masterserver and adds any new servers to the server list.];
docargument [B] [force update] [0 (delayed), 1 (immediate)] [0];
docremark [The servers are written to the config/servers.cfg file. This menu can be reached through the Multiplayer menu.];
docident [version] [Gets an integer representing the game version. READ ONLY];
docremark [As example, version 1.0 is represented as value 1000.];
docident [writecfg] [writes current configuration to config/saved.cfg - automatic on quit];
docsection [Gameplay]
docident [KEYPRESS] [If defined, this will be executed every time you press a key.];
docargument [I] [integer key code] [] [0];
docexample [checkinit KEYPRESS [echo You pressed key: (findkey $arg1)]] [];
docident [KEYRELEASE] [If defined, this will be executed every time you release a key.];
docargument [I] [integer key code] [] [0];
docexample [checkinit KEYRELEASE [echo You released key: (findkey $arg1)]] [];
docident [addListOnQuit] [Deletes a list of aliases (from saved.cfg) on quit.];
docargument [L] [the list of aliases to delete] [min /max /default ];
docexample [addListOnQuit "a b c"] [Deletes aliases a, b, and c from existance and saved.cfg upon quit.];
docident [addOnQuit] [Execute a command or block of code on quit.];
docargument [A] [the command or block of code to execute] [min /max /default ];
docident [addbot] [add a bot for a given team with a given skill calling him a given name.];
docargument [T] [team] [RVSF or CLA] [0];
docargument [S] [skill] [best, good, medium, worse OR bad] [0];
docargument [N] [name] [name for the bot] [0];
docremark [This command only works for single player modes.];
docexample [addbot RVSF medium Robbie] [Will add a bot named Robbie with a medium skill level to the RVSF team.];
docident [addnbot] [will add a given count of bots for the given team with the given skill and select random names for them.];
docargument [C] [count] [how many bots to add] [0];
docargument [T] [team] [RVSF or CLA] [0];
docargument [S] [skill] [best, good, medium, worse OR bad] [0];
docremark [This command only works for single player modes.];
docremark [The name of the bots will be selected randomly.];
docexample [addnbot 2 CLA bad] [Will add 2 bots with a bad skill level to the CLA team.];
docident [addpckserver] [Adds a packages source server where to download custom content from.];
docargument [S] [The server address. Trailing slash not needed.] [] [0];
docremark [Only add servers you trust.];
docremark [The list of servers is saved into config/pcksources.cfg on game quit.];
docexample [addpckserver http://packages.ac-akimbo.net] [];
docident [afterinit] [If defined, this will be executed after saved.cfg is loaded.];
docident [akimboautoswitch] [Enables or disables automatic switching to the akimbo upon pickup.];
docargument [N] [enable or disable] [min 0/max 1/default 1];
docident [akimboendaction] [Sets the behavior of weapon switching upon akimbo expiration.];
docargument [] [] [0 (switch to knife)] [0];
docargument [] [] [1 (stay with pistol)] [0];
docargument [] [] [2 (switch to grenades)] [0];
docargument [] [] [3 (switch to primary)] [0];
docargument [N] [akimbo end action] [min 0/max 3/default 3];
docremark [If no ammunition is detected for the target weapon, it will fallback to the previous weapon until it finds a weapon with ammunition to use.];
docident [alive] [Returns 1 if the local player is alive.];
docexample [echo (alive)] [Output: 1];
docident [autodownload] [Determines if the game should try to download missing packages such as textures or mapmodels on the fly.];
docargument [V] [Note: This is turned on by default.] [min 0/max 1/default 1];
docident [autoreload] [Indicates if the weapons should be reloaded automatically.];
docargument [B] [the autoreload state] [on (1), off (0) min 0/max 1/default 1];
docident [benchme] [Move from active team to spectator during match.];
docident [botskill] [changes the skill level for the given bot.];
docargument [N] [botname] [the name of the bot] [0];
docargument [S] [botskill] [best, good, medium, worse OR bad] [0];
docexample [botskill Robbie best] [Changes the previous bot skill level of the bot named Robbie to a 'best' skill level.];
docident [botskillall] [changes the skill level for all bots.];
docargument [S] [botskill] [best, good, medium, worse OR bad] [0];
docexample [botskillall worse] [Changes the previous bot skill level for all bots to a 'worse' skill level.];
docident [botsshoot] [Enables or disables the ability of the bots to fire their weapons];
docargument [T] [shooting bots?] [0||1] [0];
docexample [botsshoot 0] [Bots won't shoot.];
docident [changefollowplayer] [];
docargument [D] [delta] [how many players to shift +/-] [0];
docident [changespeed] [Smoothly changes your gamespeed to the specified value.];
docargument [S] [the gamespeed to change to] [] [0];
docargument [M] [milliseconds between gamespeed changes] [] [0];
docexample [changespeed 1000 30] [Every 30 milliseconds your gamespeed is changed by 1 until it reaches its goal of gamespeed 1000.];
docident [checkmag] [Determines if you have any ammunition available for the specified weapon. (uses magcontent and magreserve)];
docargument [N] [the weapon number] [] [0];
docident [clearignored] [Clear list of ignored players.];
docargument [A] [client number, or -1 to clear the whole list] [] [0];
docremark [Omit the client number to clear the whole list.];
docident [clearmuted] [Clear list of muted players.];
docargument [A] [client number, or -1 to clear the whole list] [] [0];
docremark [Omit the client number to clear the whole list.];
docident [complete] [];
docargument [C] [command] [any command or alias] [0];
docargument [P] [path] [path to search] [0];
docargument [E] [extension] [extension to match] [0];
docremark [The completion will work on the first word of your console input.];
docexample [complete demo "demos" dmo] [If you enter "/demo " and press TAB you will cycle through all available demos.];
docexample [alias mapcomplete [complete $arg1 "packages/maps" cgz]] [helper alias for quickly adding complete-definitions for all gamemodes - see config/script.cfg (below "Auto-Completions")];
docident [connect] [Connects to a server.];
docargument [N] [the address of the server (hostname or IP)] [] [0];
docargument [O] [the port] [] [0];
docargument [P] [the server password] [] [0];
docremark [If the server name is omitted, the client will try to connect to an available server in the LAN. If the port is omitted or set to 0, the default port will be used.];
docexample [connect 127.0.0.1 555 myServerPassword] [];
docident [connectadmin] [Connects to a server and tries to claim admin state.];
docargument [N] [the address of the server (hostname or IP)] [] [0];
docargument [O] [the port] [] [0];
docargument [P] [the admin password] [] [0];
docremark [This command will connect to a server just like the command 'connect' and try to claim admin state. If the specified password is correct, the admin will be able to connect even if he is locked out by ban, private master mode or taken client slots. If successfully connected, bans assigned to the admin's host will be removed automatically. If all client slots are taken a random client will be kicked to let the admin in.];
docremark [If the server name ist omitted, the client will try to connect to an available server in the LAN. If the port is omitted or set to 0, the default port will be used.];
docexample [connectadmin 127.0.0.1 777 myAdminPassword] [connect as admin on port 777 of localhost];
docexample [connectadmin "" 0 myAdminPassword] [will try to connect to a LAN server on the default port as admin with the given password of "myAdminPassword".];
docident [crouch] [];
docident [curautoteam] [Returns the server's current autoteam state.];
docident [curmap] [Returns the current map being played.];
docargument [I] [clean] [0, 1] [0];
docremark [If you pass it a non-zero value, the result will be path-less.];
docexample [echo playing: (curmap) vote for: (curmap 1)] [output: playing maps/ac_complex vote for: ac_complex];
docident [curmaprevision] [Current map revision number.];
docargument [] [-] [ read-only];
docident [curmastermode] [Returns the server's current mastermode state.];
docident [curmode] [Returns the mode number for the current game.];
docident [curmodeattr] [Checks the current game mode for certain attributes.];
docargument [A] [attribute name] [] [0];
docremark [Possible attributes are: team, arena, flag and bot.];
docident [currentprimary] [Returns the weapon-index the local player currently has selected as primary.];
docremark [This is not the same as curweapon - which could be a grenade or the knife.];
docident [currole] [Returns 1 if the local player has admin privileges, 0 otherwise.];
docident [curserver] [Returns information on the current server - if you're connected to one.];
docargument [I] [info] [0, 1, 2, 3, 4, 5, 6, 7, 8] [0];
docremark [If I is 0 (omitted or any other value than the ones below) you will get a string with 'IP PORT'];
docremark [If I is 1,2 or 3 you will get the IP, HostName or port respectively.];
docremark [If I is 4 you get a string representing the current state of the peer - usually this should be 'connected'.];
docremark [FIXME:TODO: 5=SERVERNAME, 6,7=description, 8=serverbrowser-line -- these are to be handled with caution, sometimes empty, #8 will be outdated w/o serverbrowser open.];
docexample [echo [I am (curserver 4) to (curserver 2)]] [Output: I am connected to ctf-only.assault-servers.net];
docexample [last_server = "" remember_server = [ if (strcmp (curserver 4) "connected") [ last_server = (curserver 0) echo "I'm remembering:" $last_server ] [ echo "you are not 'connected' - you" (concatword "are '" (curserver 4) "' !") ] ] bind PRINT [ if (strcmp $last_server "") [ remember_server ] [ say (concat "^L2I was just ^Lfon^L3" $last_server) last_server = "" ] ]] [This will either remember or retrieve the last server you pressed the PrintScreen-key on.];
docident [curteam] [Returns an integer indicating what team a client is currently on.];
docargument [C] [client number] [returns the specified client's team instead] [0];
docremark [Returns 0 for CLA, 1 for RVSF.];
docremark [Returns 2 for CLA-spectator, 3 for RVSF-spectator.];
docremark [Returns 4 for spectator.];
docremark [By default this command returns what team *you* (player1) are currently on.];
docident [curweapon] [Returns the weapon-index the local player is currently holding.];
docident [demo] [Plays a recorded demo.];
docargument [S] [the demo name] [] [0];
docremark [Playback is interpolated for the player whose perspective you view.];
docident [disconnect] [Leaves a server.];
docident [dlmap] [Downloads and loads the specified map from an available packages source server.];
docargument [S] [the name of the map] [] [0];
docident [drawbeamtobots] [Draws a shooting line in the direction of all available bots.];
docargument [] [this command does not take any arguments] [none] [0];
docremark [This is a debugging command and only works for single player modes.];
docident [drawzone] [Draws a zone marker with the specified color and dimensions on the minimap/radar. This is primarily intended for the survival mode.];
docargument [X1] [X-coordinate - top-left corner] [] [0];
docargument [X2] [X-coordinate - bottom-right corner] [] [0];
docargument [Y1] [Y-coordinate - top-left corner] [] [0];
docargument [Y2] [Y-coordinate - bottom-right corner] [] [0];
docargument [C] [a color for the zone, in hexadecimal notation] [default: 0x00FF00 (green)] [0];
docremark [You can draw a few zones at a time. They will be reset (i.e. removed) once a new game starts.];
docremark [Note that the coordinates must be specified as integers, not as floating-point values.];
docident [dropflag] [Drops the enemy flag.];
docident [footstepalign] [Maximum time span between player animation and the playback of the footstep sound];
docargument [T] [time span] [min 5/max 4000/default 15];
docremark [If the footstep sound would be played immediately when entering the radius of the other player, it would not be synchronous to the player model animation.];
docident [footsteps] [Indicates if the footsteps sound should be played];
docargument [B] [enable footsteps] [1 (true), 0 (false) min 0/max 1/default 1];
docident [gamespeed] [Sets the gamespeed in percent.];
docargument [N] [the game speed] [min 10/max 1000/default 100];
docremark [This does not work in multiplayer. For entertainment purposes only :)];
docident [gametimecurrent] [Returns the time (in milliseconds) of the currently played game. READ ONLY];
docexample [showtime = [ if (> $lastgametimeupdate 0) [ gmr = (- $gametimemaximum (+ $gametimecurrent (- (millis) $lastgametimeupdate))) gsr = (div $gmr 1000) gts = (mod $gsr 60) if (< $gts 10) [ gts = (concatword 0 $gts) ] [ ] gtm = (div $gsr 60) if (< $gtm 10) [ gtm = (concatword 0 $gtm) ] [ ] echo (concatword $gtm : $gts) remaining ] [ echo gametime not updated yet ] ]] [];
docident [gametimemaximum] [Returns the maximum time (in milliseconds) of the currently played game. READ ONLY];
docident [gametimestart] [Returns the time (in milliseconds) when the last map was loaded.];
docident [getclientmode] [Returns the current game mode number.];
docident [getdemo] [];
docargument [X] [number in list] [] [0];
docargument [P] [subpath] [] [0];
docident [getmap] [Retrieves the last map that was sent to the server using 'sendmap'.];
docargument [S] [the name of the map] [] [0];
docargument [C] [cubescript to execute once map is installed] [] [0];
docremark [If the command is passed an argument, different than the map being played, the game tries to download the specified map from an available packages source server.];
docident [gndtoggle] [Toggles between your primary weapon and grenades. (must be binded to a key)];
docident [grenades] [Switches to grenades. (if available) (must be binded to a key)];
docident [hasprimary] [Determines if the local player (you) are currently carrying a primary weapon.];
docremark [Returns 0 (false) or 1 (true).];
docexample [add2bind MOUSE1 [ if (hasprimary) [ echo you attacked with a primary weapon ] ]] [Everytime you press the left mouse button, assuming you are carrying your primary weapon, the above echo will be executed.];
docident [hidecustomskins] [];
docargument [B] [] [min 0/max 1/default 0];
docident [hitsound] [Plays a sound upon every successful hit if enabled.];
docargument [B] [off OR on] [0 (disabled), 1 (server), 2 (local) min 0/max 2/default 0];
docremark [If hitsound is set to 2, the sound will be played instantly rather than after server acknowledgment.];
docident [idlebots] [Enables or disables the processing of the bots artificial intelligence];
docargument [T] [off OR on] [0||1] [0];
docexample [idlebots 1] [Will make the bots stand still.];
docexample [idlebots 0] [Will enable the bots to move and shoot.];
docident [ignore] [Ignore a player.];
docargument [A] [client number] [] [0];
docremark [You won't see any further game chat or hear any more voice com messages from that player.];
docident [ignoreall] [Ignores all clients currently on the server. (only works in multiplayer)];
docident [ignoreenemy] [Ignores all clients on the enemy team.];
docident [ignoreteam] [Ignores all clients on the specified team.];
docargument [T] [the team to ignore] [0 or 1 || cla or rvsf] [0];
docident [inWater] [Determines if the local player is standing in water or submerged.];
docargument [T] [check if submerged instead?] [min 0/max 1/default 0] [0];
docexample [if (inWater) [echo in water] [echo not in water]] [Example output: in water];
docexample [if (inWater 1) [echo submerged] [echo not submerged]] [Example output: not submerged];
docident [inputcommand] [Makes an input perform a certain command.];
docargument [I] [input] [] [0];
docargument [C] [command] [] [0];
docargument [P] [prompt] [] [0];
docident [isclient] [Determines if the client number given is a valid client (player).];
docargument [C] [client number] [] [0];
docexample [echo (isclient 0)] [Example output: 1];
docexample [echo (isclient 32)] [Example output: 0];
docident [kickallbots] [Kicks all bots out of the current game.];
docargument [] [this command does not take any arguments] [none] [0];
docident [kickbot] [Kicks the bot with the given name out of the current game.];
docargument [N] [botname] [name of the bot to kick.] [0];
docexample [kickbot Robbie] [Will make the bot named "Robbie" dissapear from the current game.];
docident [knftoggle] [Toggles between your primary weapon and your knife. (must be binded to a key)];
docident [lanconnect] [];
docident [lastgametimeupdate] [Returns the last time (in milliseconds) the gametime was updated. READ ONLY];
docident [lasttarget] [Returns the name of the last player you aimed at.];
docremark [Returns nothing "" if you have not yet aimed at a player.];
docident [listcomplete] [];
docident [listdemos] [Get the game demos listing from the server we are currently connected.];
docident [listignored] [Print a list of all players that you are currently ignoring.];
docident [listmuted] [Print a list of all players that you have muted.];
docident [loadcrosshair] [Loads a crosshair for argument T.];
docargument [I] [image] [] [0];
docargument [T] [type] [all, scope, teammate, knife, pistol, carbine, shotgun, smg, sniper, ar, cpistol, grenades, akimbo] [0];
docexample [loadcrosshair red_dot.png] [Loads the red_dot.png crosshair for all weapons.];
docexample [loadcrosshair red_dot.png all] [Same as above. Loads the red_dot.png crosshair for all weapons.];
docexample [loadcrosshair red_dot.png knife] [Loads the red_dot.png crosshair for your knife only.];
docexample [loadcrosshair red_dot.png ar] [Loads the red_dot.png crosshair for your assault rifle only.];
docexample [loadcrosshair red_dot.png scope] [Loads the red_dot.png crosshair for your sniper rifle scope only.];
docident [localfootsteps] [Indicates if the footsteps sound for the local player should be played];
docargument [B] [enable footsteps] [1 (true), 0 (false) min 0/max 1/default 1];
docident [magcontent] [Returns contents of current magazine.];
docargument [N] [the weapon number] [] [0];
docremark [A knife will always return 1.];
docremark [Weapons that aren't available will return -1.];
docident [magreserve] [Returns contents of magazine reserve.];
docargument [N] [the weapon number] [] [0];
docident [map] [Loads up a map in the gamemode set previously by the 'mode' command.];
docargument [M] [Name of the map to load] [string] [0];
docremark [If connected to a multiplayer server, it votes to load the map (others will have to type "map M" as well to agree with loading this map). To vote for a map with a specific mode, set the mode before you issue the map command.];
docremark [A map given as "blah" refers to "packages/maps/blah.cgz", "mypackage/blah" refers to "packages/mypackage/blah.cgz". At every map load, "config/default_map_settings.cfg" is loaded which sets up all texture definitions, etc. Everything defined there can be overridden per package or per map by creating a "mapname.cfg" which contains whatever you want to do differently from the default.];
docremark [When the map finishes it will load the next map when one is defined, otherwise it reloads the current map. You can define what map follows a particular map by making an alias like (in the map script): alias nextmap_blah1 blah2 (loads "blah2" after "blah1").];
docident [mapname] [returns the mapname];
docident [mapsize] [outputs the mapsize.];
docident [mapstartalways] [If this alias exists it will be run every time the game starts a new map.];
docexample [mapstartalways = [ echo "------------------------------" ]] [This will output the string and override any other actions that might've been defined.];
docexample [addOnLoadAlways [ echo "------------------------------" ]] [This will output the string after any previously defined actions have run.];
docident [mapstartonce] [If this alias exists it will be run when the game starts a new map, then it is deleted.];
docexample [mapstartonce = [ echo "------------------------------" ]] [This will output the string and override any other actions that might've been defined.];
docexample [addOnLoadOnce [ echo "------------------------------" ]] [This will output the string after any previously defined actions have run.];
docident [mdldyncache] [];
docargument [V] [] [min 1/max 32/default 2];
docident [mdlstatcache] [];
docargument [V] [] [min 1/max 32/default 1];
docident [me] [Action chat message.];
docargument [...] [...] [] [1];
docident [melee] [Switches to your knife. (must be binded to a key)];
docident [minutesremaining] [Returns the remaining minutes of the currently played game. READ ONLY];
docident [modconnect] [Connect to a modded server.];
docargument [A] [IP] [] [0];
docargument [B] [port] [] [0];
docargument [C] [password] [] [0];
docremark [The modified server needs to use the original client-server protocol. The protocol version number will be the negated value of an unmodded server.];
docident [modconnectadmin] [Connect to a modded server and claim admin.];
docargument [A] [IP] [] [0];
docargument [B] [port] [] [0];
docargument [C] [admin password] [] [0];
docremark [The modified server needs to use the original client-server protocol. The protocol version number will be the negated value of an unmodded server.];
docident [modenum] [Returns the mode number for a specified mode acronym.];
docargument [M] [the mode acronym] [] [0];
docremark [Returns -1 if not found.];
docexample [echo (modenum ctf)] [Output: 5];
docexample [echo (modenum btosok)] [Output: 21];
docident [modlanconnect] [Connect to a modified LAN server.];
docremark [The modified server needs to use the original client-server protocol. The protocol version number will be the negated value of an unmodded server.];
docident [modmdlbounceN] [change name of directory used for bounce model number N];
docremark [These setting should be loaded from config/autoexec.cfg, but they work on-the-fly too.];
docremark [If the model fails to load you will end up with nothing being displayed; use delalias to get back to default];
docexample [modmdlbounce0 = misc/my_gib1] [This will make the gib 1 model use the data inside packages/models/misc/my_gib1];
docexample [modmdlbounce1 = misc/my_gib2] [This will make the gib 2 model use the data inside packages/models/misc/my_gib2];
docexample [modmdlbounce2 = misc/my_gib3] [This will make the gib 3 model use the data inside packages/models/misc/my_gib3];
docexample [modmdlbounce3 = weapons/grenade2/static] [This will make the grenade static model use the data inside packages/models/weapons/grenade2/static];
docident [modmdlpickupN] [change name of directory used for pickup model number N];
docremark [These setting should be loaded from config/autoexec.cfg, but they work on-the-fly too.];
docremark [If the model fails to load you will end up with nothing being displayed; use delalias to get back to default];
docexample [modmdlpickup3 = health2] [This will make the health pickup model use the data inside packages/models/pickups/health2];
docexample [modmdlpickup1 = my_ammobox] [This will make the ammobox pickup model use the data inside packages/models/pickups/my_ammobox];
docident [modmdlvwepN] [change name of directory used for weapon model (viewable/world) number N];
docident [modmdlweapN] [change name of directory used for weapon model (hudgun) number N];
docremark [These setting should be loaded from config/autoexec.cfg, but they work on-the-fly too.];
docremark [If the model fails to load you will end up with nothing being displayed; use delalias to get back to default];
docexample [modmdlweap4 = my_subgun] [This will make the subgun hudgun model use the data inside packages/models/weapon/my_subgun];
docident [muteplayer] [Mute a player];
docargument [A] [client number] [] [0];
docremark [You won't hear any further voice com messages from that player.];
docident [name] [Sets the nick name for the local player.];
docargument [N] [the name] [] [0];
docident [nextprimary] [Returns the primary weapon on next respawn.];
docargument [A] [weapon id] [value] [0];
docident [nickcomplete] [adds a command to complete nicknames on];
docremark [your own nick will be ignored];
docexample [nickgreet = [ say (concat "Hello," (concatword $arg1 "!")) ]; nickcomplete nickgreet] [with this you can enter "/nickgreet " and cycle via TAB to the nickname you want to greet.];
docident [onAttack] [If defined, this will be executed each time you shot a bullet, throw a grenade or use your knife.];
docargument [weapon] [The weapon that was used] [] [0];
docident [onCallVote] [If this alias exists it will be run every time a vote is called.];
docident [onChangeVote] [If this alias exists it will be run every time a vote is changed.];
docident [onConnect] [If defined, this will be executed when you or another player join(s) a server.];
docargument [player] [The client number of the player who connected] [integer (-1 for local player)] [0];
docident [onDisconnect] [If defined, this will be executed when you or another player disconnect(s) from a server.];
docargument [player] [The client number of the player who disconnected] [integer (-1 for local player)] [0];
docident [onFlag] [If defined, this will be executed each time a flag action occurs.];
docargument [action] [The action that occured] [integer (0 = stolen, 1 = dropped, 2 = lost, 3 = returned, 4 = scored, 5 = ktfscore, 6 = failed to score, 7 = reset)] [0];
docargument [actor] [The client number of the actor] [integer] [0];
docargument [flag] [The flag owner team] [integer (0 = CLA, 1 = RVSF)] [0];
docident [onHit] [If it's defined, this alias will be executed each time a damage is done.];
docargument [actor] [The client number of the actor] [integer] [0];
docargument [target] [The client number of the target] [integer] [0];
docargument [damage] [The damage done] [integer] [0];
docargument [gun] [The number of the gun used] [integer] [0];
docargument [gib] [Is it a gib or a normal frag] [integer (0 or 1)] [0];
docident [onKill] [If it exists, this alias will be executing when any player get killed, receiving a few arguments :];
docargument [actor] [The client number of the actor] [integer] [0];
docargument [target] [The client number of the target] [integer] [0];
docargument [gun] [The number of the gun used] [integer] [0];
docargument [gib] [Is it a gib or a normal frag] [integer (0 or 1)] [0];
docident [onLastMin] [If this alias exists, it will be automatically executed on the last minute remaining mark.];
docident [onNameChange] [If defined, this will be executed when you or another player change(s) his name.];
docargument [player] [The client number of the player who connected] [integer] [0];
docargument [new name] [The new name of the client] [string] [0];
docremark [The alias is executed before the name is effectively changed, so you can still get the previous name of the client from this alias.];
docident [onPickup] [If defined, this will be executed each time you pick up an item.];
docargument [item] [The item that was picked up] [integer (0 = pistol clips, 1 = ammo box, 2 = grenade, 3 = health, 4 = helmet, 5 = armour, 6 = akimbo)] [0];
docargument [q] [The quantity that was received] [] [0];
docident [onReload] [If defined, this will be executed each time you reload a weapon.];
docargument [B] [was autoreload?] [0 (false), 1 (true)] [0];
docident [onSpawn] [If defined, this will be executed each time a player spawns.];
docargument [player] [The client number of the player who spawned] [integer] [0];
docident [onVoteEnd] [If this alias exists it will be run every time a vote passes or fails.];
docident [onWeaponSwitch] [If defined, this will be executed each time you switch to a different weapon.];
docargument [w] [The weapon ID that you switched to] [] [0];
docident [paused] [Determines if the game should be paused.];
docargument [B] [pause game] [min 0/max 1/default 0];
docident [pm] [Sends a private message to a specified client.];
docargument [C] [Client number] [] [0];
docargument [L] [List of strings] [] [0];
docident [prevweapon] [Returns the weapon-index the local player was previously holding.];
docident [primary] [Switches to your current primary weapon. (must be binded to a key)];
docident [pstat_score] [Returns the score statistics for the player with the given clientnumber.];
docargument [C] [client] [0..N] [0];
docexample [echo (pstat_score 0)] [Output: 0 5 3 43 1 1 unarmed];
docident [pstat_weap] [Returns the shot statistics for the player with the given clientnumber.];
docargument [C] [client] [0..N] [0];
docremark [The list is:];
docremark [knife/atk dmg pistol/atk dmg carbine/atk dmg shotgun/atk dmg smg/atk dmg sniper/atk dmg assault/atk dmg cpistol/atk dmg nade/atk dmg akimbo/atk dmg];
docexample [echo (pstat_weap 0)] [Output: 0 0 0 0 0 0 0 0 0 0 1 240 15 312 0 0 3 112 0 0];
docident [quickanswer] [Easily respond the the last client who sent you a private message.];
docident [reconnect] [Disconnects then reconnects you to the current server.];
docargument [P] [the server password] [] [0];
docident [reload] [Reloads the weapon.];
docargument [A] [] [value] [0];
docident [resetpckservers] [Resets the list of packages source servers where to download custom content from.];
docremark [The list of servers is saved into config/pcksources.cfg on game quit.];
docident [resetzones] [Reset all drawn zones.];
docident [rewind] [Rewind the current demo to S seconds ago.];
docargument [S] [the number of seconds to rewind] [] [0];
docremark [Note: you can use a negative value to forward.];
docident [say] [Outputs text to other players.];
docargument [S...] [the text] [] [1];
docremark [If the text begins with a percent character (%), only team mates will receive the message.];
docident [saycommand] [Puts a prompt on screen.];
docargument [S...] [the text to display in the prompt] [] [1];
docremark [This puts a prompt on screen that you can type into, and will capture all keystrokes until you press return (or ESC to cancel). If what you typed started with a "/", the rest of it will be executed as a command, otherwise its something you "say" to all players.];
dockey [T] [] [opens empty prompt];
dockey [BACKQUOTE] [`] [opens a command prompt /];
dockey [TAB] [] [autocompletes commands/variables/aliases];
dockey [UP] [] [browse command history forwards];
dockey [DOWN] [] [browse command history backwards];
docident [scopefov] [Determines the FOV when scoping.];
docargument [V] [] [min 5/max 60/default 50];
docident [secondary] [Switches to your secondary weapon. (must be binded to a key)];
docident [setfollowplayer] [];
docargument [C] [clientnum] [which player to follow] [0];
docident [setmr] [Go to a predefined number of minutes before the end of the game while watching a demo.];
docargument [M] [the minutes remaining to skip to] [] [0];
docident [setscope] [will display a scope for the sniper-rifle. used in the zoom-script (config/scripts.cfg [l. 92ff "alias zoom"]];
docargument [Y] [scope on?] [0||1] [0];
docident [shiftweapon] [shifts your selected weapon by a given delta. By default the mouse-wheel shifts one up or down according to your scroll direction.];
docargument [D] [delta] [-N..-1,+1..N] [0];
dockey [MOUSE4] [] [cycle one up];
dockey [MOUSE5] [] [cycle one down];
docident [showmap] [Determines if the mini-map should be shown on screen.];
docargument [B] [show mini-map] [min 0/max 1/default 0];
docident [showmapbackdrop] [change wether to have a see-through map overview (0), or render it on a black backdrop (1) or a combination of both (2)];
docargument [B] [backdrop-style] [min 0/max 2/default 0];
docident [showmapbackdroptransparency] [Transparency of the black map backdrop (in percent) rendered if showmapbackdrop is set to 2.];
docargument [T] [transparency] [min 0/max 100/default 75];
docident [showscores] [Shows or hides the scores.];
dockey [TAB] [] [];
docident [showscoresondeath] [Determines if scores should be shown on death.];
docargument [V] [] [min 0/max 1/default 1];
docident [skin] [Determines the skin of the current player.];
docargument [N] [skin id] [value] [0];
docremark [See the player model folder for the according skin-id.];
docident [skin_cla] [Choose skin when playing for team CLA.];
docargument [N] [skin id] [] [0];
docident [skin_rvsf] [Choose skin when playing for team RVSF.];
docargument [N] [skin id] [] [0];
docident [sndtoggle] [Toggles between your primary weapon and your secondary weapon. (must be binded to a key)];
docident [sortpckservers] [Sorts the available packages source servers by ascendant ping. The fastest to reach is then used by default.];
docident [spectate] [Toggles spectator mode.];
docident [spectatemode] [Sets the desired spectating mode.];
docargument [M] [the mode] [2 (1st-person), 3 (3rd-person), 4 (3rd-person transparent), 5 (free flying), 6 (overview)] [0];
dockey [SPACE] [] [switch spectator mode];
docident [start_intermission] [If this alias exists it will be run when the game reaches intermission.];
docexample [start_intermission = [ echo "INTERMISSION - STATISTICS TIME" loop p 255 [ pn = (findpn $p) if (strcmp $pn "") [ ] [ echo (concatword Player $p ":") (pstat_score $p) ":" (pstat_weap $p) ] ] echo "------------------------------" ]] [This will output the full statistics line for all players.];
docident [stopdemo] [Stops any demo recording or playback.];
docident [suicide] [Kills your player. You will lose 1 frag point and receive 1 death point when using this command.];
docident [survival] [Prepares a round of bot survival mode on the specified map.];
docargument [M] [the map to use] [] [0];
docargument [D] [the difficulty] [0 = easy, 1 = intermediate, 2 = hard, 3 = impossible] [0];
docremark [All official maps are compatible with survival, if you want to play survival on a custom map, prior edits/additions to the script are necessary, such as adding a zone for that specific map.];
docident [team] [Sets the team for the local player.];
docargument [S] [the team name] [either CLA or RVSF or SPECTATOR] [0];
docexample [team CLA] [];
docident [togglespect] [cycles through all available spectator modes. Follow-1stPerson, Follow-3rdPerson, Follow-3rdPerson-transparent and Fly.];
dockey [SPACE] [] [cycle spectator modes];
docident [unignoreall] [Unignores all clients currently on the server. (only works in multiplayer)];
docident [voicecom] [];
docargument [S] [sound] [must be a registered voicecom-sound] [0];
docargument [T] [text] [] [0];
dockey [V] [] [opens the voicecom menu, use number keys for your choice];
docident [voicecomsounds] [Enables or disables voicecom audio.];
docargument [] [] [0 (off)] [0];
docargument [] [] [1 (always play voicecom audio)] [0];
docargument [] [] [2 (only play voicecom audio from you and your teammates)] [0];
docargument [N] [voicecom sounds] [min 0/max 2/default 1];
docident [vote] [agree or disagree to the currently running vote];
docargument [V] [vote value] [1 (yes) OR 2 (no)] [0];
dockey [F1] [] [votes YES];
dockey [F2] [] [votes NO];
docident [votemap] [Sets the next gamemode then calls a vote for a map.];
docargument [I] [mode id] [] [0];
docargument [M] [map name] [] [0];
docident [votepending] [Determines if there is a vote pending or not.];
docexample [echo $votepending] [Output: if there is currently a vote pending, returns 1, else returns 0.];
docident [watchingdemo] [Returns 1 when the current game is being played from a demo, else 0.];
docexample [echo I am (at [not now] (watchingdemo)) watching a demo. "so, are you?"] [];
docident [weapon] [Changes the weapon.];
docargument [N] [the weapon number] [0 (knife), 1 (pistol), 2 (carbine), 3 (shotgun), 4 (sub), 5 (sniper), 6 (assault), 8 (grenades), 9 (akimbo)] [0];
docident [whois] [get the IP address of a given clientnumber - only admins get shown the last octet];
docargument [C] [clientnum] [] [0];
docident [xhairwpsel] [Determines if bot waypoints should be selected/placed using the crosshair or by the nearest location to your player.];
docargument [V] [Note: This is turned on by default.] [min 0/max 1/default 1];
docsection [Editing]
docident [Map editing] [A variable indicating if the game is in editmode.];
docargument [B] [editmode] [1 (true), 0 (false) read-only];
docident [addpath1way1] [];
docident [addpath1way2] [];
docident [addpath2way1] [];
docident [addpath2way2] [];
docident [addselection] [Select the given area, as if dragged with the mouse holding CTRL.];
docargument [X] [the X coordinate] [] [0];
docargument [Y] [the Y coordinate] [] [0];
docargument [XS] [the length along the X axis] [] [0];
docargument [XY] [the length along the Y axis] [] [0];
docremark [This command is useful for making complex geometry-generating scripts. It adds a selection to the current list of selections. The dimensions of the current selections can be accessed by the commands selsx, selsy, selsxs and selsys. These commands return the list of coordinates corresponding to each selection.];
docremark [Coordinates are as follows: after a "newmap 6" the top-left corner (the one where the red dot points) are (8,8), the opposite corner is (56,56) (or (120,120) on a "newmap 7" etc.).];
docident [addwp] [Adds a bot waypoint at the current position.];
docargument [A] [connect automatically] [0 or 1] [0];
docident [advancemaprevision] [Select the increment of the map revision number for the next 'savemap'.];
docargument [N] [increment] [min 1/max 100/default 1];
docident [ambient] [Controls the ambient lighting of the map, i.e. how bright areas not affected by any light entities will appear.];
docargument [N] [the ambient color] [min 0x000000/max 0xFFFFFF/default 0];
docident [ambientsoundvol] [Deletes the entity closest to the player];
docremark [hotkey x];
docident [applymapsoundchanges] [During map editing, drop all mapsounds so they can be re-added.];
docident [arch] [Makes an arch out of the current selection.];
docargument [S] [side delta] [] [0];
docremark [The selection must be a heightfield before this command can be used. Will make the arch in the long direction, i.e when you have 6x2 cubes selected, the arch will span 7 vertices. Optionally, sidedelta specifies the delta to add to the outer rows of vertices in the other direction, i.e. give the impression of an arch that bends 2 ways (try "arch 2" on an selection of at least 2 thick to see the effect). Not all arch sizes are necessarily available, see config/prefabs.cfg.];
docident [archvertex] [Defines a vertex delta for a specific arch span prefab, used by the 'arch' command.];
docargument [S] [span value] [integer] [0];
docargument [V] [vertex value] [integer] [0];
docargument [D] [delta value] [integer] [0];
docremark [See config/prefabs.cfg for an example on usage.];
docident [autowp] [Automatically place waypoints.];
docident [clearents] [Deletes all entities of said type.];
docargument [T] [the entity type, see command 'newent'] [string] [0];
docident [closestenttype] [Restrict 'closest entity' display to one entity type.];
docargument [A] [entity type] [] [0];
docident [convertclips] [Converts the nearest entity (if its a clip or plclip) to its opposite type.];
docexample [convertclips] [Assuming the nearest entity is a clip, it will be converted to a plclip.];
docexample [convertclips] [Assuming the nearest entity is a plclip, it will be converted to a clip.];
docident [copy] [Copies the current selection into a buffer.];
docremark [hotkey c];
docident [copyent] [Copies the current closest entity into a buffer.];
docremark [Only works while in edit mode.];
docident [corner] [Makes the current selection into a "corner".];
docremark [Currently there is only one type of corner (a 45 degree one), only works on a single unit (cube) at a time. It can be positioned either next to 2 solid walls or in the middle of 2 higher floorlevels and 2 lower ones forming a diagonal (and similar with ceiling).];
docremark [In both cases, the corner will orient itself automatically depending on its neighbours, behaviour with other configurations than the 2 above is unspecified. Since the latter configuration generates possibly 2 floor and 2 ceiling levels, up to 4 textures are used: for example for the 2 floors the higher one will of the cube itself, and the lower one of a neighbouring low cube. You can make bigger corners at once by issuing "corner" on grid aligned 2x2/4x4/8x8 selections, with equal size solid blocks next to them.];
dockey [K] [] [];
docident [countwalls] [Returns the number of solid walls contained into the current selection.];
docargument [T] [the integer of type of the walls you want to count] [ 0 (solid), 1 (corner), 2 (floor heightfield), 3 (ceil heightfield), 4 (empty cube), 5 (semi solid)] [0];
docexample [echo (concat "The selection contains " (countwalls 0) "solid wall(s)")] [Output: The selection contains 3 solid wall(s)];
docident [delent] [Deletes the entity closest to the player];
docremark [hotkey x];
docident [delpath1way1] [];
docident [delpath1way2] [];
docident [delpath2way1] [];
docident [delpath2way2] [];
docident [delwp] [Deletes the selected waypoint.];
docident [editaxis] [Contains the main axis of the player orientation.];
docargument [N] [11: X, 12: Y, 13: Z] [min 0/max 13/default 0];
docident [editheight] [Changes the height of the current selection.];
docargument [T] [an integer denoting the type] [0 (floor), 2 (ceiling)] [0];
docargument [D] [the delta value to move it in] [1 (forwards), -1 (backwards)] [0];
docremark [Default keys are [ and ] for floor level, and o/p for ceiling.];
docident [editing] [];
docargument [V] [] [min 1/max 0/default 0];
docident [edittag] [];
docargument [T] [tag] [integer value] [0];
docident [edittex] [Changes the texture on current selection by browsing through a list of textures directly shown on the cubes.];
docargument [T] [an integer denoting the type] [0 (floor), 1 (lower or wall), 2 (ceiling), 3 (upper wall)] [0];
docargument [D] [the direction you want to cycle the textures in] [1 (forwards), -1 (backwards)] [0];
docremark [Default keys are the six keys above the cursor keys, which each 2 of them cycle one type (and numpad 7/4 for upper).];
docremark [The way this works is slightly strange at first, but allows for very fast texture assignment. All textures are in 3 individual lists for each type (both wall kinds treated the same), and each time a texture is used, it is moved to the top of the list. So after a bit of editing, all your most frequently used textures will come first when pressing these keys, and the most recently used texture is set immediately when you press the forward key for the type. These lists are saved with the map. make a selection (including wall bits) and press these keys to get a feel for what they do.];
docident [edittoggle] [switches between map edit mode and normal.];
docremark [In map edit mode you can select bits of the map by clicking or dragging your crosshair on the floor or ceiling (using the "attack" identifier, normally MOUSE1), then use the identifiers below to modify the selection. While in edit mode, normal physics and collision don't apply (clips), and key repeat is ON. Note that if you fly outside the map, cube still renders the world as if you were standing on the floor directly below the camera.];
docremark [Hotkey E];
docident [entproperty] [Changes property of the closest entity.];
docargument [P] [the property to change] [0..3] [0];
docargument [A] [amount by wich the property is increased] [integer] [0];
docremark [For example 'entproperty 0 2' when executed near a lightsource would increase its radius by 2.];
docident [entset] [Edits the closest entity.];
docargument [type] [the entity type] [light, sound, clip, plclip, playerstart, pistol, ammobox, grenades, health, armour, akimbo, mapmodel, ladder, ctf-flag, helmet] [0];
docargument [value1] [see newent 'type'] [] [0];
docargument [value2] [see newent 'type'] [] [0];
docargument [value3] [see newent 'type'] [] [0];
docargument [value4] [see newent 'type'] [] [0];
docremark [Overwrites the closest entity with the specified values.];
docident [entstats] [Print some map entity statistics to the console.];
docident [equalize] [Levels the floor/ceiling of the selection.];
docargument [T] [an integer denoting the type] [0 (floor), 2 (ceiling)] [0];
docremark [default keys , and .];
docident [expandselection] [Increases the size of the current selection by N cubes on all sides.];
docargument [N] [number of cubes] [integer] [0];
docremark [Instead of manually executing this command, you can bind "domodifier 11" to a key. While holding this key you can expand/shrink the current selection with the mouse wheel.];
docident [flrceil] [A variable indicating if the player looks at the floor or at the ceiling.];
docargument [B] [flrceil] [0 (floor), 2 (ceiling) read-only];
docident [flyspeed] [Determines by how much to multiply the fly speeds by.];
docargument [N] [the multiplier] [min 1.0/max 5.0/default 2.0];
docident [fullbright] [Sets all light values to fullbright.];
docargument [B] [sets fullbright on or off] [0 (off), 1 (on)] [0];
docremark [Will be reset when you issue a 'recalc'. Only works in edit mode.];
docident [getentattr] [];
docident [getenttype] [];
docident [getmapmsg] [Returns the map message of the current map.];
docident [guidetoggle] [Enables or disables a special set of default textures while editing.];
docremark [The textures in "packages/textures/map_editor" are used.];
docident [heightfield] [Marks the current selection as a heightfield.];
docargument [T] [an integer denoting the type] [0 (floor), 2 (ceiling)] [0];
docremark [marks the current selection as a heightfield, with T being floor or ceiling, as above. A surface marked as heightfield will use the vdelta values (see below) of its 4 corners to create a sloped surface. To mark a heightfield as normal again (ignoring vdelta values, set or not) use "solid 0". Default keys are h (floor) and i (ceiling).];
docremark [Heightfields should be made the exact size that is needed, not more not less. The most important reason for this is that cube automatically generates "caps" (side-faces for heightfields) only on the borders of the heightfield. This also means if you have 2 independent heightfields accidentally touch each other, you will not get correct caps. Also, a heightfield is slightly slower to render than a non-heightfield floor or ceiling. Last but not least, a heightfield should have all the same baseheight (i.e. the height determined by a normal editheight operation) to get correct results.];
docident [lightscale] [Used to finetune the "overbright lighting" rendering feature when enabled.];
docargument [N] [the brightness of the scene] [min 1/max 100/default 4];
docremark [After changing this value, a "recalc" is needed to see the differences.];
docident [mapbackupsonsave] [Determines if map backups (.bak) should be created when a map is saved.];
docargument [N] [0 off, 1 on] [min 0/max 1/default 1];
docident [mapenlarge] [Enlarges the current map.];
docremark [This command will make the current map 1 power of two bigger. So a size 6 map (64x64 units) will become a size 7 map (128x128), with the old map in the middle (from 32-96) and the new areas solid.];
docident [mapmsg] [Sets the map message, which will be displayed when the map loads.];
docargument [M] [The map message] [String] [0];
docremark [You will need to use quote marks around the message, otherwise it save the message correctly.];
docremark [For example: /mapmsg "Map By Author"];
docident [mapshrink] [Reduces the world size by 1.];
docremark [This command will make the current map 1 power of two smaller. So a size 7 map (128x128) will become a 6 size map (64x64 units), by removing 32 cubes from each side. The area to be removed needs to be empty (= all solid).];
docident [movemap] [Move the whole map (including all entities) in the specified direction.];
docargument [dX] [x-offset] [] [0];
docargument [dY] [y-offset] [] [0];
docargument [dZ] [z-offset] [] [0];
docident [newent] [Adds a new entity];
docargument [type] [the entity type] [light, sound, clip, plclip, playerstart, pistol, ammobox, grenades, health, armour, akimbo, mapmodel, ladder, ctf-flag, helmet] [0];
docargument [value1] [see newent 'type'] [] [0];
docargument [value2] [see newent 'type'] [] [0];
docargument [value3] [see newent 'type'] [] [0];
docargument [value4] [see newent 'type'] [] [0];
docremark [(x,y) is determined by the current selection (the red dot corner) and z by the camera height, of said type. Type is a string giving the type of entity, such as "light", and may optionally take values (depending on the entity).];
docident [newent akimbo] [Adds a new akimbo item.];
docident [newent ammobox] [Adds a new ammo box item.];
docident [newent armour] [Adds a new armour item.];
docident [newent clip] [Adds a clip entity.];
docargument [Z] [elevation above the ground] [integer] [0];
docargument [X] [X radius around the box center] [integer] [0];
docargument [Y] [Y radius around the box center] [integer] [0];
docargument [H] [height of the box] [integer] [0];
docremark [Defines a clipping box against which the player will collide.];
docremark [Use this clip type to clip visible obstacles like fences or the gas tank. If you only want to prevent a player from entering an area, use plclip instead.];
docident [newent ctf-flag] [Adds a CTF flag entity.];
docargument [T] [denotes the flag's team] [0 (CLA), 1 (RVSF)] [0];
docremark [Note that outside of edit mode, this entity is only rendered as flag if the current game mode is CTF.];
docident [newent grenades] [Adds a new grenades item.];
docident [newent health] [Adds a new health item.];
docident [newent helmet] [Adds a new helmet item.];
docident [newent ladder] [Adds a ladder entity.];
docargument [H] [the height of the ladder] [integer] [0];
docremark [Note that this entity is used for physics only, to create a visual ladder you will need to add a mapmodel entity too.];
docident [newent light] [Adds a new light entity];
docargument [radius] [the light radius] [1..32] [0];
docargument [R] [red colour component. see remarks below.] [1..255] [0];
docargument [G] [green colour component] [1..255] [0];
docargument [B] [blue colour component] [1..255] [0];
docremark [if only argument R is specified, it is interpreted as brightness for white light.];
docident [newent mapmodel] [Adds a map model to the map (i.e. a rendered md2/md3 model which you collide against but has no behaviour or movement)];
docargument [N] [The mapmodel identifier] [Integer] [0];
docargument [Z] [Extra elevation above ground] [Integer] [0];
docargument [T] [The map texture to use] [Integer] [0];
docremark [The mapmodel identifier is the desired map model which is defined by the 'mapmodel' command. The order in which the mapmodel is placed in the map config file defines the mapmodel identifier. The map texture refers to a texture which is defined by the 'texture' command, if omitted the models default skin will be used. The 'mapmodel' and 'texture' commands are placed in the map config normally. Mapmodels are more expensive than normal map geometry, so do not use insane amounts of them to replace normal geometry.];
docident [newent pistol] [Adds a pistol magazine item.];
docident [newent playerstart] [Adds a new spawn spot.];
docremark [The yaw is taken from the current camera yaw.];
docident [newent plclip] [Adds a player clip entity.];
docargument [Z] [elevation above the ground] [integer] [0];
docargument [X] [X radius around the box center] [integer] [0];
docargument [Y] [Y radius around the box center] [integer] [0];
docargument [H] [height of the box] [integer] [0];
docremark [Defines a clipping box against which (only) the player will collide.];
docremark [Use this clip type to define no-go areas for players without visible obstacles, for example to prevent players from walking on a wall.];
docremark [Nades will not be affected by this clip type.];
docident [newent sound] [Adds a sound entity.];
docargument [N] [the sound to play] [integer] [0];
docargument [R] [the radius] [] [0];
docargument [S] [the size] [default 0] [0];
docargument [V] [the volume] [default 255] [0];
docremark [Will play map-specific sound so long as the player is within the radius. However, only up to the max uses allowed for N (specified in the mapsound command) will play, even if the player is within the radius of more N sounds than the max. By default (size 0), the sound is a point source. Its volume is maximal at the entity's location, and tapers off to 0 at the radius. If size is specified, the volume is maximal within the specified size, and only starts tapering once outside this distance. Radius is always defined as distance from the entity's location, so a size greater than or equal to the radius will just make a sound that is always max volume within the radius, and off outside.];
docremark [A sound entity can be either ambient or non-ambient. Ambient sounds have no specific direction, they are 'just there'. Non-ambient sounds however appear to come from a specific direction (stereo panning). If S is set to 0, the sound is a single point and will therefore be non-ambient. However if S is greater than 0, the sound will be ambient as it covers a specified area instead of being a single point.];
docident [newmap] [Creates a new map.];
docargument [S] [the size of the new map] [6..9] [0];
docremark [The new map has 2^S cubes. For S, 6 is small, 7 medium, 8 large.];
docident [newselkeys] [Binds a list of keys to be used to create new (multiple) selections in editmode.];
docremark [LCTRL is default.];
docexample [newselkeys = [LCTRL RCTRL LALT RALT]] [Makes all 4 keys create new (multiple) selections in editmode.];
docident [nextclosestent] [Choose another 'closest ent'.];
docremark [Use this, when two entities are placed in exactly the same location.];
docident [nextplayerstart] [Visit next player spawn entity.];
docargument [TYPE] [0|1|100] [] [0];
docident [old_editbinds] [Enables or disables the old editing binds.];
docremark [If disabled, an updated editing binds system is used, see the comments in "/config/resetbinds.cfg" for more info.];
docexample [old_editbinds = 0] [disables the old editing binds];
docexample [old_editbinds = 1] [enables the old editing binds];
docident [oldselstyle] [Enables or disables using triangles to render the editing grid/current selection instead of squares.];
docargument [N] [0 off, 1 on] [min 0/max 1/default 1];
docident [onNewMap] [If this alias exists, it will be automatically executed when you start a new map.];
docident [paste] [Pastes a previously copied selection.];
docremark [To paste a selection back requires a same size selection at the destination location. If it is not the same size the selection will be resized automatically prior to the paste operation (with the red dot as anchor), which is easier for large selections.];
docremark [hotkey v];
docident [pasteent] [Pastes a previously copied entity.];
docremark [Only works while in edit mode.];
docident [perlin] [Generates a perlin noise landscape in the current selection.];
docargument [S] [the scale, frequency of the features] [default is 10] [0];
docargument [E] [the random seed] [integer] [0];
docargument [C] [cube size, how many cubes to generate a surface for at once (unused)] [] [0];
docremark [Keep the seed the same to create multiple perlin areas which fit with each other, or use different numbers if to create alternative random generations.];
docident [recalc] [Recomputes all there is to recompute about a map, currently only lighting.];
docremark [hotkey R];
docident [registersound] [Registers a sound.];
docargument [N] [sound name] [string, see config/sounds.cfg] [0];
docremark [This command returns the sound number, which is assigned from 0 onwards, and which can be used with "sound" command. If the sound was already registered, its existing index is returned. registersound does not actually load the sound, this is done on first play.];
docremark [See for example config/sounds.cfg.];
docident [replace] [Repeats the last texture edit throughout the map.];
docremark [The way it works is intuitive: simply edit any texture anywhere, then using "replace" will replace all textures throughout the map in the same way (taking into account whether it was a floor/wall/ceil/upper too). If the there was more than one "old" texture in your selection, the one nearest to the red dot is used. This operation can't be undone.];
docident [resetselections] [Resets all current selections.];
docident [savemap] [Saves the current map.];
docargument [M] [file name of the map, see command 'map' for the naming scheme] [string] [0];
docremark [savemap makes a versioned backup (mapname_N.BAK) if a map by that name already exists. If the name argument is omitted, it is saved under the current map name.];
docremark [Where you store a map depends on the complexity of what you are creating: if its a single map (maybe with its own .cfg) then the "base" package is the best place. If its multiple maps or a map with new media (textures etc.) its better to store it in its own package (a directory under "packages"), which makes distributing it less messy.];
docident [scalelights] [Scales all lights in the map.];
docargument [S] [size change (percentage)] [] [0];
docargument [I] [intensity change (percentage)] [] [0];
docremark [This command is useful if a map is too dark or bright but you want to keep the light entities where they are.];
docident [select] [Resets all current selections and selects the given area, as if dragged with the mouse.];
docargument [X] [the X coordinate] [] [0];
docargument [Y] [the Y coordinate] [] [0];
docargument [XS] [the length along the X axis] [] [0];
docargument [XY] [the length along the Y axis] [] [0];
docremark [This command is similar to addselection although "select" resets all selections.];
docident [selectionflip] [Flip the selected part of the map at an axis.];
docargument [AXIS] [X or Y] [] [0];
docident [selectionrotate] [Rotate the selected part of the map in 90 degree steps.];
docargument [D] [steps] [] [0];
docremark [To rotate clockwise, use a positive number of steps. Note, that only quadratic selections can be rotated by 90 degrees.];
docident [selsx] [Return a list containg the x-coordinate of each selection];
docident [selsxs] [Return a list containg the x-span of each selection];
docident [selsy] [Return a list containg the y-coordinate of each selection];
docident [selsys] [Return a list containg the y-span of each selection];
docident [setjumpwp] [];
docident [settex] [Set a texture for the current selection.];
docargument [T] [position of the texture to set in map cfg] [integer] [0];
docargument [t] [the type of the texture] [0 (floor), 1 (wall), 2 (ceil), 3 (upper wall)] [0];
docident [setwpyaw] [takes the current player yaw for the current waypoint];
docident [showclips] [Show clips/plclips/mapmodel clips in edit mode.];
docargument [N] [-] [min 0/max 1/default 1];
docident [showgrid] [Show editing cursor grid.];
docargument [N] [-] [min 0/max 1/default 1];
docident [showmip] [Toggles between showing what parts of the scenery are rendered.];
docremark [Shows what parts of the scenery are rendered using what size cubes, and outputs some statistics about it. This can give map editors hints as to what architecture to align, textures to change, etc.];
docident [showmodelclipping] [Show mapmodel clipping during edit mode.];
docargument [N] [-] [min 0/max 1/default 0];
docident [shrinkselection] [Decreases the size of the current selection by N cubes on all sides.];
docargument [N] [number of cubes] [integer] [0];
docremark [Instead of manually executing this command, you can bind "domodifier 11" to a key. While holding this key you can expand/shrink the current selection with the mouse wheel.];
docident [slope] [Makes a slope out of the current selection.];
docargument [X] [x delta step] [integer] [0];
docargument [Y] [y delta step] [integer] [0];
docremark [The selection must be a heightfield before this command can be used. The steps specify the slope with the red vertex as left-top, i.e. "slope 1 2" will make a slope that increases just 1 step from left to right, and is slightly steeper from top to bottom. "slope -6 0" decreases steeply from left to right, and does not slope at all from top to bottom. Note that like the vdelta command, an increasing vdelta goes further away from the player, regardless of floor or ceiling.];
docident [solid] [makes the current selection all solid (i.e. wall) or all non-solid.];
docargument [B] [an integer denoting the solid-ness] [0 (non-solid), 1..* (solid)] [0];
docremark [This operation retains floor/ceiling heights/textures while swapping between the two. Default keys f and g respectively.];
docident [telebot] [teletransports the bot with the lowest connection number to you current position.];
docargument [] [this command does not take any arguments] [none] [0];
docremark [This is a debugging command and only works for single player modes.];
docident [testvisible] [];
docargument [D] [direction] [0..5 for Forward, Backward, Left, Right, Up AND Down] [0];
docident [togglebotview] [When used you will see what the bot sees. Type it again (with or without name) to return to the game(you will respawn).];
docargument [N] [botname] [the name of the bot] [0];
docident [togglegrab] [Will toggle the focus of the mouse in game. Normally you can use your mouse to look around, when you type this command your mouse cursor is visible and can be used as normally. This is only useful when you run cube windowed.];
docident [toggleocull] [Turns occlusion culling on and off.];
docremark [The reason one may want to turn it off is to get an overview of the map from above, without having all occluded bits stripped out.];
docident [undo] [Multi-level undo of any of the changes caused by editing operations];
docremark [hotkey u];
docident [undomegs] [Sets the number of megabytes used for the undo buffer.];
docargument [N] [number of megabytes, default is 1] [integer] [0];
docremark [undo's work for any size areas, so the amount of undo steps per megabyte is more for small areas than for big ones (a megabyte fits 280 undo steps on a 16x16 area, but only 4 steps on a 128x128 area).];
docident [unsetjumpwp] [];
docident [vdelta] [changes the vdelta value of the current selection];
docargument [N] [vdelta value] [] [0];
docremark [Note that unlike all other editing functions, this function doesn't affect a cube, but its top-left vertex (market by the dot in the editing cursor). So to edit a N * M heightfield, you will likely have to edit the vdelta of (N+1) * (M+1) cubes, i.e. you have to select 1 row and 1 column more in the opposite direction of the red dot to affect all the vertices of a heightfield of a given size (try it, it makes sense :)];
docremark [A floor delta offsets vertices to beneath the level set by editheight (and a ceil delta to above). Delta offsets have a precision of a quarter of a unit, however you should use non-unitsize vertices only to touch other such vertices. Default keys are 8 and 9 to decrease/increase the vdelta.];
docident [waterlevel] [Sets the global water level for the map.];
docargument [H] [the water level] [integer] [0];
docremark [Every cube that has a lower floor than the water level will be rendered with a nice wavy water alpha texture. Water physics will be applied to any entity located below it.];
docremark [Performance notes: water is rendered for a whole square encapsulating all visible water areas in the map (try flying above the map in edit mode to see how). So the most efficient water is a single body of water, or multiple water areas that are mostly not visible from each other. Players can influence how accurate the water is rendered using the "watersubdiv" command (map config).];
docident [wpclear] [];
docident [wpflood] [];
docident [wpinfo] [makes waypoints visible and either turns on or off the waypoint information display.];
docargument [Y] [show info?] [0||1] [0];
docident [wpload] [];
docident [wpsave] [];
docident [wpvisible] [];
docargument [V] [visible] [0||1] [0];
docsection [Menus]
docident [chmenumdl] [Changes the menu model of a specified menu.];
docargument [N] [the name of the menu] [] [0];
docargument [M] [the (new) model] [] [0];
docargument [A] [the animation to play] [] [0];
docargument [R] [the rotation speed] [] [0];
docargument [S] [the scale] [] [0];
docident [closemenu] [Closes the specified menu if it is open.];
docargument [N] [the name of a previously defined menu] [] [0];
docremark [If it is open multiple times in the stack only the topmost instance will be closed!];
docident [delmenu] [Deletes the entire contents (all menu items) of the given menu.];
docargument [N] [the name of a previously defined menu] [] [0];
docident [menuinit] [Specifies commands to be executed when a menu opens.];
docargument [C] [The code to execute on init] [] [0];
docremark [This command should be placed after newmenu.];
docident [menuinitselection] [Defines the initial selection for a menu.];
docargument [A] [line number] [] [0];
docident [menuitem] [Creates a new menuitem.];
docargument [N] [The menuitem description.] [] [0];
docargument [A] [The command to execute on selection of the menuitem.] [] [0];
docargument [H] [The command to execute upon rolling over the menuitem.] [] [0];
docremark [Upon activating the menuitem, the associated command will be executed. (See config/menus.cfg for examples). If the command argument is omitted, then it will be set to the same value as the description. If -1 is specified instead of the command to execute, then no command is executed when activating the item. If the rollover option is used, the menuitem will execute that command when selecting (but not activating) the menuitem.];
docremark [(Note: To activate the menu item, select it, and either: Click, press SPACE or press ENTER/Return).];
docident [menuitemcheckbox] [];
docident [menuitemimage] [];
docident [menuitemkeyinput] [];
docident [menuitemslider] [];
docident [menuitemtextinput] [];
docident [menuitemvar] [Creates a new menuitem with variable content.];
docargument [N] [The cubescript to generate the menuitem description.] [] [0];
docargument [A] [The command to execute on selection of the menuitem.] [] [0];
docargument [H] [The command to execute upon rolling over the menuitem.] [] [0];
docremark [Like 'menuitem', but the menuitem description will be the result of an evaluation, everytime the menu gets displayed.];
docident [menumdl] [Specifies a model to render while displaying the last added menu.];
docargument [M] [the model] [] [0];
docargument [A] [the animation to play] [] [0];
docargument [R] [the rotation speed] [] [0];
docargument [S] [the scale] [] [0];
docident [menuselection] [Selects a line in a menu.];
docargument [A] [menu name] [] [0];
docargument [B] [line number] [] [0];
docident [menuselectionbgcolor] [Defines the background color for the menu selection bar.];
docargument [R] [red (0..100)] [] [0];
docargument [G] [green (0..100)] [] [0];
docargument [B] [blue (0..100)] [] [0];
docargument [A] [alpha (0..100)] [] [0];
docident [newmenu] [Creates a new menu.];
docargument [N] [The name of the menu] [] [0];
docremark [All menu commands placed after newmenu (i.e. menuitem, menuitemcheckbox, etc) are added into the menu until another "newmenu" command is specified.];
docident [showmenu] [Displays the specified menu.];
docargument [N] [the name of a previously defined menu] [] [0];
docremark [The menu allows the user to pick an item with the cursor keys. Upon pressing return, the associated action will be executed. Pressing ESC will cancel the menu.];
docident [wrapslider] [If wrapslider is set the menuitemslider will toggle to the min/max value if at end of the range.];
docargument [N] [0 off, 1 on] [min 0/max 1/default 0];
docsection [Heads-Up Display]
docident [aboveheadiconfadetime] [Time in milliseconds before the abovehead icon dissapears.];
docargument [V] [abovehead icon display time] [min 1/max 10000/default 2000];
docident [altconsize] [Sets the number of text lines on an alternate F11 history display.];
docargument [V] [] [min 0/max 100/default 0];
docident [clearminimap] [Recreates the minimap for the current map.];
docident [clockdisplay] [Sets the display mode for the HUD clock.];
docargument [D] [display mode] [min 0/max 2/default 0];
docremark [The clock shows game-time, it is either off (0) or counts backward (1) or forward (2).];
docident [cncolumncolor] [colour of CN column in scoreboard];
docargument [] [] [0 (green)] [0];
docargument [] [] [1 (blue)] [0];
docargument [] [] [2 (yellow)] [0];
docargument [] [] [3 (red)] [0];
docargument [] [] [4 (gray)] [0];
docargument [] [] [5 (white, default)] [0];
docargument [] [] [6 (dark brown)] [0];
docargument [] [] [7 (dark red)] [0];
docargument [] [] [8 (purple)] [0];
docargument [] [] [9 (orange)] [0];
docargument [N] [color] [min 0/max 9/default 5];
docident [confade] [Sets how many seconds before the console text rolls (disappears) up the screen.];
docargument [V] [time before the text rolls up] [min 0/max 60/default 20];
docident [consize] [Sets how many lines of text the console displays.];
docargument [V] [] [min 0/max 100/default 6];
docident [conskip] [Allows to browse through the console history by offsetting the console output.];
docargument [N] [the offset] [] [0];
dockey [KP_MINUS] [- on the keypad] [scrolls into the history (conskip 1)];
dockey [KP_PLUS] [+ on the keypad] [resets the history (conskip -1000)];
docident [crosshairfx] [Turns on or off crosshair effects.];
docargument [B] [Turns the effects on (1) or off (0)] [min 0/max 1/default 1];
docremark [When on, the crosshair will go grey when the weapon is reloading, orange when health is 50 or red when is 25.];
docident [crosshairsize] [Sets the size of your crosshair.];
docargument [N] [the crosshair size] [min 0/max 50/default 15];
docremark [The crosshair is turned off entirely if the size is set to 0.];
docident [crosshairteamsign] [Turns on/off display of team warning crosshair.];
docargument [V] [enable/disable warning crosshair] [min 0/max 1/default 1];
docident [damageindicatoralpha] [Set the level of transparency of the damage indicator, 0 = is fully transparent, 100 = totaly solid.];
docargument [V] [damage indicator alpha value] [min 1/max 100/default 50];
docident [damageindicatordist] [Sets the separation of the arrows in the damage indicator.];
docargument [V] [damage indicator separation size] [min 0/max 10000/default 500];
docident [damageindicatorsize] [Sets the size of the damage indicator.];
docargument [V] [damage indicator icon size] [min 0/max 10000/default 200];
docident [damageindicatortime] [Sets how long the damage indicator stays on screen.];
docargument [V] [damage indicator display time] [min 1/max 10000/default 1000];
docident [disablehud] [Stores your current HUD configuration in a buffer and disables it entirely.];
docident [enablehud] [Restores your HUD configuration after using disablehud.];
docident [fullconsize] [Sets the number of text lines on the F11 history display.];
docargument [V] [] [min 0/max 100/default 40];
docident [hidebigmenuimages] [Hide big images in menus.];
docargument [N] [0: show, 1: hide] [min 0/max 1/default 0];
docident [hidecompass] [Turns on/off the radar compass];
docargument [V] [enable/disable radar compass] [min 0/max 1/default 0];
docident [hideconsole] [Turns on or off the display of console text.];
docargument [V] [enable/disable console text] [min 0/max 1/default 0];
docident [hidectfhud] [Turns on or off the display of flag icons.];
docargument [V] [enable/disable flag icons] [min 0/max 1/default 0];
docident [hidedamageindicator] [Turns on/off the damage indicator];
docargument [V] [enable/disable damage indicator] [min 0/max 1/default 0];
docident [hidehudequipment] [Turns on or off the display of equipement icons.];
docargument [V] [enable/disable equipement icons] [min 0/max 1/default 0];
docident [hidehudmsgs] [Turns on or off the display of messages at the bottom of the screen.];
docargument [V] [enable/disable messages] [min 0/max 1/default 0];
docident [hideradar] [Turns on or off the display of the on-screen radar.];
docargument [V] [enable/disable radar] [min 0/max 1/default 0];
docident [hidespecthud] [Turns on or off the display of spectator staus.];
docargument [V] [enable/disable spectator status] [min 0/max 1/default 0];
docident [hideteam] [Turns on or off the display of local player team icons.];
docargument [V] [enable/disable team icons] [min 0/max 1/default 0];
docident [hidevote] [Turns on or off the display of vote icons.];
docargument [V] [enable/disable vote info] [min 0/max 2/default 0];
docident [history] [Executes the specified command in the command line history.];
docargument [N] [the N'th command from the history] [] [0];
docremark [For example, binding "history 1" to a key allows you to quickly repeat the last command typed in (useful for placing many identical entities etc.)];
docident [hudextras] [Shows extra gameplay messages on certain events if connected to a server.];
docargument [] [] [0 (off)] [0];
docargument [] [] [1 (show extra messages in the console)] [0];
docargument [] [] [2 (show extra messages in the console and on the HUD)] [0];
docargument [] [] [3 (SPAM extra messages in the console and on the HUD)] [0];
docargument [N] [enable/disable extra gameplay messages] [min 0/max 3/default 0];
docident [hudgun] [Turns on or off the display of the current selected gun.];
docargument [V] [show/hide guns 3D models] [min 0/max 1/default 1];
docident [maxcon] [Sets the total number of text lines from the console to store as history.];
docargument [V] [] [min 10/max 1000/default 200];
docident [maxhistory] [Sets how many typed console commands to store.];
docargument [N] [Total of stored commands] [min 0/max 10000/default 1000];
docremark [This value sets how many command lines to store in memory, everytime a command is entered it gets store so it can be recalled using the "/" key along with the arrow keys to scroll back and forth through the list.];
docident [maxrecoil] [.];
docargument [V] [] [min 0/max 1000/default 1000];
docident [minimapres] [Sets the resolution for the minimap.];
docargument [N] [the resolution] [min 7/max 10/default 9];
docident [nosway] [];
docargument [V] [] [min 0/max 1/default 0];
docident [oldfashionedgunstats] [Shows ammo statistics like version 1.0];
docargument [N] [0: new, 1: old] [min 0/max 1/default 0];
docident [orderscorecolumns] [Show the client number column on the scoreboard first?];
docargument [N] [cn column order] [0 (false), 1 (true) min 0/max 1/default 0];
docident [radarentsize] [Sets the icon size of the players shown in the radar and the minimap.];
docargument [V] [size of icons inside radar] [min 4/max 64/default 12];
docident [radarheight] [change at what height you are floating in the radar-view];
docargument [H] [height] [min 5/max 500/default 150];
docident [recoilbackfade] [];
docargument [V] [] [min 0/max 1000/default 100];
docident [recoilbase] [];
docargument [V] [] [min 0/max 1000/default 40];
docident [recoilincrease] [];
docargument [V] [] [min 1/max 10/default 2];
docident [recoiltest] [];
docargument [V] [] [min 0/max 1/default 0];
docident [righthanded] [Choose whether the players hand carrying the weapon appears as right or left handed.];
docargument [N] [0: lefty, 1: righty] [min 0/max 1/default 1];
docident [sc_clientnum] [Sets the order priority for the column cn on the scoreboard.];
docargument [V] [low priority: left, high priority: right] [min 0/max 100/default 6];
docident [sc_deaths] [Sets the order priority for the column deaths or disables it on the scoreboard.];
docargument [V] [-1: disable, low priority: left, high priority: right] [min -1/max 100/default 2];
docident [sc_flags] [Sets the order priority for the column flags on the scoreboard.];
docargument [V] [low priority: left, high priority: right] [min 0/max 100/default 0];
docident [sc_frags] [Sets the order priority for the column frags on the scoreboard.];
docargument [V] [low priority: left, high priority: right] [min 0/max 100/default 1];
docident [sc_lag] [Sets the order priority for the column pj/ping or disables it on the scoreboard.];
docargument [V] [-1: disable, low priority: left, high priority: right] [min -1/max 100/default 5];
docident [sc_name] [Sets the order priority for the column name on the scoreboard.];
docargument [V] [low priority: left, high priority: right] [min 0/max 100/default 7];
docident [sc_ratio] [Sets the order priority for the column ratio or disables it on the scoreboard.];
docargument [V] [-1: disable, low priority: left, high priority: right] [min -1/max 100/default -1];
docident [sc_score] [Sets the order priority for the column score or disables it on the scoreboard.];
docargument [V] [-1: disable, low priority: left, high priority: right] [min -1/max 100/default 4];
docident [showmodedescriptions] [enables or disables the showing of game mode descriptions on the console after map starts.];
docargument [B] [0 off, 1 on] [min 0/max 1/default 1];
docident [showspeed] [Enables or disables showing the player's horizontal speed.];
docargument [N] [0 off, 1 on] [min 0/max 1/default 0];
docident [showstats] [Turns on/off display of FPS/rendering statistics on the HUD.];
docargument [N] [0: Show no stats, 1: Only show FPS stats, 2: Show all stats] [min 0/max 2/default 1];
docident [showtargetname] [enables or disables showing the player name on the HUD when in your crosshair.];
docargument [N] [0 off, 1 on] [min 0/max 1/default 1];
docident [specthudgun] [Turns on/off the display of the hudgun while spectating a player in first-person view. Works in demo mode as well.];
docargument [V] [show/hide hudgun when spectating] [min 0/max 1/default 1];
docident [swaymovediv] [];
docargument [V] [] [min 1/max 1000/default 200];
docident [swayspeeddiv] [];
docargument [V] [] [min 1/max 1000/default 105];
docident [swayupmovediv] [];
docargument [V] [] [min 1/max 1000/default 200];
docident [swayupspeeddiv] [];
docargument [V] [] [min 1/max 1000/default 105];
docsection [Visuals]
docident [aadynshadow] [Sets the size/resolution of the dynamic shadow data.];
docargument [] [the size] [min 0/max 3/default 2];
docident [aboveheadiconsize] [Sets the size for the icon shown above a player using comunications voices.];
docargument [V] [Icon size] [min 0/max 1000/default 50];
docident [animationinterpolationtime] [Sets the time available for interpolation between model animations.];
docargument [N] [the amount of milliseconds for the interpolation] [min 0/max 1000/default 100];
docident [ati_mda_bug] [];
docargument [V] [] [min 0/max 1/default 0];
docident [bilinear] [];
docargument [V] [] [min 0/max 1/default 1];
docident [blood] [Turn on and off the display of blood.];
docargument [V] [Enable/Disable blood] [min 0/max 1/default 1];
docident [bloodttl] [Sets the amount of time in milliseconds that blood is displayed on the ground.];
docargument [V] [Blood display time] [min 0/max 30000/default 10000];
docident [bullethole] [Turns on/off the display of bullet holes];
docargument [V] [Enable/Disable bullet holes] [min 0/max 1/default 1];
docident [bulletholettl] [Specifies how long (in milliseconds) to display bullet holes.];
docargument [V] [Bullethole display time] [min 0/max 30000/default 10000];
docident [changegamma] [Smoothly changes your gamma to the specified value.];
docargument [G] [the gamma to change to] [] [0];
docargument [M] [milliseconds between gamma changes] [] [0];
docexample [changegamma 300 30] [Every 30 milliseconds your gamma is changed by 1 until it reaches its goal of gamma 300.];
docident [colorbits] [Sets the bits per pixel value.];
docargument [] [bits per pixel] [min 0/max 32/default 0];
docident [damagescreen] [show the blood-spat overlay when receiving damage?];
docargument [N] [damagescreen] [0 (false), 1 (true) min 0/max 1/default 1];
docident [damagescreenalpha] [if overlay of blood-spat, at what blending (transparency) level?];
docargument [N] [damagescreen transparency] [min 1/max 100/default 45];
docident [damagescreenfactor] [if overlay of blood-spat, use which factor?];
docargument [N] [damagescreen factor] [min 1/max 100/default 7];
docident [damagescreenfade] [if overlay of blood-spat, at what speed does it fade?];
docargument [N] [damagescreen fade] [min 0/max 1000/default 125];
docident [dbgmbatch] [];
docargument [V] [] [min 0/max 1/default 0];
docident [dbgpos] [Displays local player's current x,y,z position in map, showstats 1 must be enabled.];
docargument [V] [display current position] [min 0/max 1/default 0];
docident [dbgstenc] [];
docargument [V] [] [min 0/max 2/default 0];
docident [dbgtiles] [];
docargument [V] [] [min 0/max 1/default 0];
docident [dbgvlight] [];
docargument [V] [] [min 0/max 1/default 0];
docident [depthbits] [Sets the bits for the depth buffer.];
docargument [] [depth pixels] [min 0/max 32/default 0];
docident [depthoffset] [];
docargument [V] [] [min /max /default 0.005f];
docident [dyngamma] [Enables or disables the per official map dynamic gamma system.];
docexample [dyngamma = 0] [Output: disables the system];
docexample [dyngamma = 1] [Output: enables the system];
docident [dynlight] [Determines whether dynamic shadows and lights are rendered, provided just incase they slow your fps down too much.];
docargument [R] [the radius of a dynamic light] [min 0/max 32/default 16];
docremark [With radius you can specify the radius of a dynamic light, smaller to maybe gain some speed (0 is off entirely), or bigger to see the effect of dynamic shadows more dramatically (try shooting it past some pillars that have a dark area on the other side... or use the "gamespeed" variable).];
docident [dynshadow] [Sets the alpha value (transparency) for dynamic shadows.];
docargument [] [the alpha value] [min 0/max 100/default 40];
docident [dynshadowdecay] [];
docargument [V] [] [min 0/max 3000/default 1000];
docident [dynshadowquad] [];
docargument [V] [] [min 0/max 1/default 0];
docident [dynshadowsize] [Sets the display size of the dynamic shadows.];
docargument [] [the size] [min 4/max 8/default 5];
docident [font] [Loads a font texture to use as text within AssaultCube.];
docargument [NAME] [The font name.] [] [0];
docargument [PATH] [The path to the font texture.] [] [0];
docargument [A] [The default width.] [] [0];
docargument [B] [The default height.] [] [0];
docargument [C] [Offset (co-ordinate X).] [] [0];
docargument [D] [Offset (co-ordinate Y).] [] [0];
docargument [E] [Offset (width).] [] [0];
docargument [F] [Offset (height).] [] [0];
docident [fontchar] [Specify a region of an image to be used as a font character];
docargument [A] [X co-ordinates (from top-left corner).] [] [0];
docargument [B] [Y co-ordinates (from top-left corner).] [] [0];
docargument [C] [Width.] [] [0];
docargument [D] [Height.] [] [0];
docident [fov] [Sets the field of view (fov).];
docargument [N] [the FOV value] [min 75/max 120/default 90];
docident [fovcompat] [Sets the field of view (fov) based on the rules of AC v0.93];
docargument [A] [FOV degree] [] [0];
docremark [This command is supplied for backward compatibility.];
docident [fpsrange] [(descripton unavailable)];
docargument [A] [min] [] [0];
docargument [B] [max] [] [0];
docident [fragmessage] [set the frag message corresponding to a weapon (appearing on the hud or in server logs)];
docargument [G] [the integer of the gun] [ 0 = knife, etc.] [0];
docargument [M] [the message you want to appear] [ex : sniped] [0];
docremark [This command can be read by both client and server, but the server can't read the cfg if it contains anything else than fragmessage or gibmessage calls.];
docexample [fragmessage 5 sniped // set "sniped" message for frags with sniper.] [It will display "you sniped unarmed" on the hud when you frag unarmed with sniper. In server logs you will get "[127.0.0.1] killer sniped unarmed".];
docident [fsaa] [Sets the level of fullscreen antialiasing (FSAA).];
docargument [] [fsaa] [min 0/max 16/default 0];
docident [fullbrightlevel] [Sets the level of brightness to use when using the command "/fullbright 1".];
docargument [V] [Light intensity level] [min 0/max 255/default 176];
docident [fullscreen] [Enables or disables fullscreen.];
docargument [] [fullscreen] [min 0/max 1/default 1];
docremark [Not supported on Windows and Mac.];
docident [gamma] [Sets the hardware gamma value.];
docargument [N] [the gamma value] [min 30/max 300/default 100];
docremark [May not work if your card/driver doesn't support it.];
docident [gib] [Enables or disables the gib animation entirely.];
docargument [B] [off OR on] [0 (false), 1 (true) min 0/max 1/default 1];
docident [gibmessage] [set the gib message corresponding to a weapon (appearing on the hud or in server logs)];
docremark [This command is identical to fragmessage (above)];
docident [gibnum] [Sets the number of gibs to display when performing a "messy" kill (grenade, knife, sniper headshot).];
docargument [N] [number of gibs] [min 0/max 1000/default 6];
docremark [Larger values are more spectacular, but can slow down less powerful machines. Reducing gibttl may help in this case.];
docident [gibsgore] [Adjusts gib/gibnum/gibspeed/gibttl variables collectively.];
docargument [] [] [0 - Off] [0];
docargument [] [] [1 - Default/Normal values] [0];
docargument [] [] [2 - Good] [0];
docargument [] [] [3 - Messy] [0];
docargument [] [] [4 - Unrealistic] [0];
docargument [N] [] [min 0/max 4/default 1];
docident [gibspeed] [Sets the velocity at which gibs will fly from a victim.];
docargument [N] [velocity] [min 1/max 100/default 30];
docident [gibttl] [Sets the time for gibs to live (in milliseconds), after which they will disappear.];
docargument [N] [time to live] [min 0/max 15000/default 5000];
docident [glext] [checks for the searchstring in all loaded extensions];
docargument [E] [extension] [] [0];
docexample [if (glext shadow_funcs) [echo you have shadow functionality] [echo no shadows for you]] [];
docident [heartbeat] [Defines the health level at or below which a heartbeat sound will be played. A value of 0 (which is the default) disables this feature.];
docargument [H] [health value] [min 0/max 99/default 0];
docident [hirestextures] [Controls whether textures with a scale higher than 1.0 will be scaled down while loading to increase performance (0) or stay at higher resolution (1).];
docargument [S] [scale down?] [min 0/max 1/default 1];
docident [hwtexsize] [The maximum texture size (in pixels) supported by the graphics hardware.];
docargument [V] [max. hardware texture size] [min 1/max 0/default 0];
docident [lighterror] [Allows to finetune the amount of "error" the mipmapper/stripifier allow themselves for changing lightlevels.];
docargument [E] [the error value, 1 being the best quality] [ read-only];
docremark [If this variable is changed this during play, a "recalc" is needed to see the effect.];
docident [maploaditemlength] [change at what position to truncate the map title string];
docargument [N] [chars] [min 0/max 255/default 46];
docident [maxtexsize] [The maximum texture (if less than hwtexsize) that will actually be used by the engine, larger textures will be scaled down. 0 removes this limit.];
docargument [V] [max. texture size] [min 0/max 4096/default 0];
docident [mergestrips] [];
docargument [V] [] [min 0/max 1/default 1];
docident [mtexplosion] [];
docargument [V] [] [min 0/max 1/default 1];
docident [mtwater] [];
docargument [V] [] [min 0/max 1/default 1];
docident [particlesize] [Scales all particles.];
docargument [P] [the scale percentage] [min 20/max 500/default 100];
docident [polygonoffsetfactor] [];
docargument [V] [] [min /max /default -3.0f];
docident [polygonoffsetunits] [];
docargument [V] [] [min /max /default -3.0f];
docident [popdeadplayers] [make dead players instantly pop out of existence, instead of falling over and sinking into the ground.];
docargument [B] [BOOL] [min 0/max 1/default 0];
docident [reflectclip] [];
docargument [V] [] [min 0/max 100/default 3];
docident [reflectscissor] [];
docargument [V] [] [min 0/max 1/default 1];
docident [reflectsize] [];
docargument [V] [] [min 6/max 10/default 8];
docident [resetgl] [Resets the OpenGL rendering settings];
docident [saveshadows] [Sets if dynamic shadows should be saved to disk.];
docargument [] [auto save] [min 0/max 1/default 1];
docident [scorch] [];
docargument [V] [] [min 0/max 1/default 1];
docident [scorchttl] [];
docargument [V] [] [min 0/max 30000/default 10000];
docident [scorefont] [Whether a special monospace font should be used to render the text on the scoreboard.];
docargument [M] [normal (0) or monospace (1)] [min 0/max 1/default 0];
docident [scr_h] [Sets the screen height.];
docargument [] [the screen height] [min 0/max 768/default 10000];
docident [scr_w] [Sets the screen width.];
docargument [] [the screen width] [min 0/max 1024/default 10000];
docident [screenres] [Changes the screen resolution];
docargument [W] [width] [] [0];
docargument [H] [height] [] [0];
docident [setfont] [Changes the current font.];
docargument [N] [Font name] [name of the font] [0];
docident [setgamma] [Sets the current map's default dynamic gamma.];
docargument [G] [the gamma value] [] [0];
docremark [The setting will take affect automatically if dyngamma is enabled, upon future loads of that map. This command only works on official maps!];
docremark [Rather than manually loading each official map and setting it's default gamma with this command, the entire list can be initialized via your autoexec.cfg like so:];
docexample [checkinit afterinit [ofc_gamma_list = [175 225 150 120 ...]]] [Sets your custom gamma values for the per official map dynamic gamma system. If you are going to use this method, you MUST include values for every existing official map. The list must be alphabetical and be the exact length of the number of currrent official maps. Hint: use "echo $defaultmaps" and "echo (listlen $defaultmaps)".];
docident [shadowcasters] [];
docargument [V] [] [min 1/max 0/default 0];
docident [shadowclip] [];
docargument [V] [] [min 0/max 1/default 1];
docident [shadowtile] [];
docargument [V] [] [min 0/max 1/default 1];
docident [shotline] [];
docargument [V] [] [min 0/max 1/default 1];
docident [shotlinettl] [];
docargument [V] [] [min 0/max 10000/default 75];
docident [skyclip] [];
docargument [V] [] [min 0/max 1/default 1];
docident [spectfov] [Specifies the Field Of View when in spectating/ghost mode.];
docargument [V] [Spectate FOV size] [min 5/max 120/default 110];
docident [stencilbits] [];
docargument [V] [] [min 0/max 32/default 0];
docident [stencilshadow] [Sets the transparency/opacity level of stencil shadows.];
docargument [V] [Alpha level] [min 0/max 100/default 40];
docident [teamdisplaymode] [Sets the team display mode.];
docargument [N] [the team display mode] [0 (none), 1 (color vests), 2 (color skins) min 0/max 2/default 1];
docremark [In mode 0 team display is disabled In mode 1 players will be rendered with a colored vest to make the teams distinguishable. In mode 2 almost the whole suit of the players will be colored. These display modes are only applied in team gameodes.];
docident [texreduce] [Reduces the size of all texture by the selected factor:];
docargument [S] [scale selection] [min -1/max 3/default 0];
docident [trilinear] [];
docargument [V] [] [min 0/max 1/default 1];
docident [vsync] [Enables or disables vsync.];
docargument [] [vsync] [min -1/max 1/default -1];
docremark [-1 uses the default settings obtained from the system. 0 disables, 1 enables vsync.];
docident [waterreflect] [Turns on/off the reflections in the water surface.];
docargument [V] [enable/disable water reflections] [min 0/max 1/default 1];
docident [waterrefract] [Turns on/off water refractions.];
docargument [V] [enable/disable water refractions] [min 0/max 1/default 0];
docident [watersubdiv] [Determines the subdivision of the water surface in maps.];
docargument [N] [the subdivisioin value] [min 1/max 64/default 4];
docremark [Must be a power of 2: 4 is the default, 8 is recommended for people on slow machines, 2 is nice for fast machines, and 1 is quite OTT. See "waterlevel" (edit reference) on how to add water to your own levels.];
docsection [Sound]
docident [al_referencedistance] [The distance from the source emitting the sound to the listener.];
docargument [V] [] [min 0/max 1000000/default 400];
docident [al_rollofffactor] [This value indicates the relative "strength" of a sound (how far away the sound can be heard.];
docargument [V] [] [min 0/max 1000000/default 100];
docident [audio] [Enables or disables the audio subsystem in AC.];
docargument [B] [enable] [min 0/max 1/default 1];
docident [audiodebug] [Enables verbose output for debugging purposes.];
docargument [B] [enable audio debug] [min 0/max 1/default 0];
docident [bulletairsound] [];
docargument [V] [] [min 0/max 1/default 1];
docident [bulletairsounddestrad] [];
docargument [V] [] [min 0/max 1000/default 8];
docident [bulletairsoundrad] [];
docargument [V] [] [min 0/max 1000/default 15];
docident [bulletairsoundsourcerad] [];
docargument [V] [] [min 0/max 1000/default 8];
docident [bulletbouncesound] [];
docargument [V] [] [min 0/max 1/default 1];
docident [bulletbouncesoundrad] [];
docargument [V] [] [min 0/max 1000/default 15];
docident [gainscale] [Each subsequent played sound's gain-value is scaled by this percentage.];
docargument [N] [percentage] [min 0/max 100/default 100];
docremark [This lowers the gain of the sounds before they are mixed, this might be useful in cases when the mixer has problems with too high gain values.];
docident [mapsoundrefresh] [Specifies the interval for checking mapsounds.];
docargument [N] [interval in milliseconds] [min 0/max 1000/default 50];
docremark [If set to value 0, the map sounds will be checked in every frame without any interval limitation.];
docident [maxsoundsatonce] [];
docargument [V] [] [min 0/max 100/default 40];
docident [music] [Play music in the background.];
docargument [A] [music file name] [] [0];
docargument [B] [playtime] [] [0];
docargument [C] [command to be executed, when music is done] [] [0];
docident [musicvol] [Sets the music volume.];
docargument [N] [the volume] [min 0/max 255/default 128];
docident [mutesound] [Mute a specific game sound.];
docargument [N] [ID of the sound to mute] [see config/sounds.cfg, starting at ID 0] [0];
docargument [A] [audible?] [(mute) 0 || 1 (unmute)] [0];
docident [sound] [Plays the specified sound.];
docargument [S] [the sound to play] [string, see config/sounds.cfg] [0];
docremark [See config/sounds.cfg for default sounds, and use registersound to register your own. For example, sound 0 and sound (registersound "aard/jump") both play the standard jump sound.];
docident [soundchannels] [Sets the desired amount of allocated sound channels.];
docargument [] [number of channels] [min 4/max 1024/default 32];
docremark [AC will try to allocate that number of channels but it is not guaranteed to succeed.];
docident [soundmuted] [Returns 1 if sound A is muted, else 0.];
docargument [A] [sound ID] [See /config/sounds.cfg for valid sound ID's.] [0];
docexample [mutesound 5; if (soundmuted 5) [echo Sound 5 is muted!] [echo Sound 5 is not muted!]] [Output: Sound 5 is muted!];
docident [soundscheddistancescore] [];
docargument [V] [] [min 0/max 1000/default 5];
docident [soundschedoldbonus] [];
docargument [V] [] [min 0/max 1000/default 100];
docident [soundschedpriorityscore] [];
docargument [V] [] [min 0/max 1000/default 100];
docident [soundschedreserve] [];
docargument [V] [] [min 0/max 100/default 2];
docident [soundvol] [Sets the sound volume for all sounds.];
docargument [N] [the volume] [min 0/max 255/default 128];
docident [unmuteallsounds] [Unmutes all previously muted sounds.];
docsection [Ingame Reference]
docident [docargument] [Adds a new argument documentation to the last added identifier.];
docargument [T] [the token] [] [0];
docargument [D] [the description] [] [0];
docargument [V] [the value notes] [] [0];
docargument [I] [flags this argument as variable-length] [1 (true), 0 (false)] [0];
docremark [An argument represents either a command argument or a variable value.];
docremark [The last argument of an identifier can be flagged as variable-length to indicate that it represents an unknown number of arguments.];
docident [docexample] [Adds an example to the last added identifier.];
docargument [C] [the example code] [] [0];
docargument [E] [the explanation] [] [0];
docident [docfind] [Searches the ingame docs for identifier documentations matching the specified search string.];
docargument [S] [the search string] [] [0];
docremark [The name, description and remarks are included in the search.];
docident [docident] [Adds a new identifier documentation to the last added section.];
docargument [N] [name of the identifier] [] [0];
docargument [D] [the description] [] [0];
docremark [An identifier represents a command or variable. The new identifier];
docremark [The name may contain spaces to create a "multipart" identifier documentation that can be used to describe a complex argument as a single pseudo identifier, look at the examples.];
docexample [docident fov "Sets the field of view."] [];
docexample [docident "newent light" "Adds a new light entity."] [];
docident [docinvalid] [Outputs a list of identifier documentations that do not match any existing identifier.];
docremark [Multipart identifiers are not included in this list, see 'docident'.];
docident [dockey] [];
docargument [A] [] [value] [0];
docident [docref] [Adds a new documentation reference to an identifier.];
docargument [N] [the display name] [] [0];
docargument [I] [the identifier to refer to] [] [0];
docargument [U] [the URL to refer to] [] [0];
docremark [The new reference is added to the last added identifier documentation.];
docident [docremark] [Adds a new documentation remark to the last added identifier.];
docargument [S] [the remark] [] [0];
docident [docsection] [Adds a new section to the ingame documentation.];
docargument [S] [the section name] [] [0];
docident [docskip] [];
docargument [V] [] [min 0/max 1000/default 0];
docident [docundone] [Outputs a list of yet undocumented identifiers (commands,variables, etc)];
docargument [A] [output all identifiers] [1 (true), 0 (false)] [0];
docremark [If the one argument is omitted, only the builtin identifiers will be listed. Therefore specify the argument other identifiers like aliases should be included too.];
docremark [Note that the list also includes identifiers that contain the substrings "TODO" or "UNDONE" in their documentation.];
docident [docvisible] [];
docargument [V] [] [min 0/max 1/default 1];
docident [docwritebaseref] [Writes out a base XML documentation reference containing templates for the builtin identifiers.];
docargument [R] [the reference name] [] [0];
docargument [S] [the XML schema location string] [] [0];
docargument [T] [XML stylesheet to use] [] [0];
docremark [The generated reference is written to "docs/autogenerated_base_reference.xml" by default. The three arguments can be changed later on in the generated XML document.];
docsection [Server commands]
docident [addfavcategory] [Adds a new category in the serverbrowser favourites.];
docargument [A] [reference designator (keep short and unique)] [] [0];
docremark [Add new categories to your autoexec.cfg, check favourites.cfg for examples.];
docident [autoteam] [Sets automated team assignment.];
docargument [B] [Enables or disables auto team.] [1 (On), 0 (Off)] [0];
docident [ban] [Temporary ban of the specified player from the server.];
docargument [CN] [The player to ban] [Client number] [0];
docremark [Temporary ban duration is fixed at 20 minutes.];
docident [callvote] [Calls a vote on the server.];
docargument [T] [Vote type] [value] [0];
docargument [A] [First argument] [] [0];
docargument [B] [Second argument] [] [0];
docremark [This command is wrapped by aliases for better usability and is used to action votes such as ban, kick, etc. See config/admin.cfg for actual uses.];
docident [cleardemos] [Clears all demos currently in memory on the server.];
docident [deleteservermap] [Deletes a map from the current server.];
docargument [A] [map name] [] [0];
docident [forceme] [Calls a vote to forceteam yourself to the specified team.];
docargument [T] [the team to force yourself to] [0-4] [0];
docremark [By default, if you are on team CLA or RVSF, this command will force you to the enemy team, no arguments necessary.];
docident [forceteam] [Calls a vote to force the specified player to switch to the specified team.];
docargument [C] [client number of player] [integer] [0];
docargument [T] [the team to force to] [0-4] [0];
docremark [Teams are:];
docremark [0 - CLA];
docremark [1 - RVSF];
docremark [2 - Spec-CLA];
docremark [3 - Spec-RVSF];
docremark [4 - Spec];
docident [giveadmin] [Gives admin state to the specified player.];
docargument [CN] [The player to become admin] [Client number] [0];
docremark [Requires admin state. The admin will lose his admin state after successfully issuing this command.];
docident [hidefavicons] [Hide favourites icons in serverbrowser.];
docargument [N] [0: show, 1: hide] [min 0/max 1/default 0];
docident [kick] [Kicks the specified player from the server.];
docargument [CN] [The player to kick] [Client number] [0];
docident [listfavcats] [List all registered serverbrowser favourites categories];
docident [mastermode] [Sets the mastermode for the server.];
docargument [N] [The master mode] [0 (Open), 1 (Private), 2 (Match)] [0];
docremark [If the mastermode is set to 'private', no more clients can join the server. Default is 'open' which allows anyone to join the server.];
docident [masterupdatefrequency] [];
docargument [V] [] [min 1/max 24*60*60/default 60*60];
docident [maxservpings] [Sets the number of servers to be pinged at once.];
docargument [V] [] [min 0/max 1000/default 10];
docident [removebans] [Removes all temporary bans from the server. Temporary bans are normally automatically removed after 20 minutes.];
docident [searchlan] [];
docargument [V] [] [min 0/max 2/default 1];
docident [searchnickname] [Search a nickname (or -part) on all servers.];
docargument [N] [nickname to search] [] [0];
docident [sendmap] [Sends a map to the server.];
docargument [M] [map to send] [] [0];
docremark [During coop edit, the current map gets saved to file and sent to the server. Other players can use 'getmap' to download it.];
docremark [When not in edit mode, the map will not be saved. The new map will be used, when the next game on that map starts on the server.];
docident [serverbrowserhidefavtag] [Hide favourites tag column in serverbrowser];
docargument [N] [-] [min 0/max 2/default 1];
docident [serverbrowserhideip] [Hide server IP and port in serverbrowser.];
docargument [N] [-] [min 0/max 2/default 2];
docident [serverdesc] [If the server was run with -n1 and -n2 arguments (prefix and suffix of descriptive title) a serveradmin can set a user-defined server description with this command, if it wasn't this command results in "invalid vote". This title will only stay until the next map is loaded.];
docargument [D] [description] [] [0];
docremark [If, for example, the server was run with -n"Fred's Server" -n1"Fred's " -n2" Server", then you could call "/serverdesc [pWn4g3 TOSOK]" and it would show up as "Fred's pWn4g3 TOSOK Server" in the serverbrowser.];
docident [serverextension] [Modded servers announcement of features. See source/src/server.cpp [Line 2926ff. "case SV_EXTENSION:"]];
docargument [E] [extension] [] [0];
docargument [D] [description] [] [0];
docident [serversort] [];
docargument [V] [] [min 0/max NUMSERVSORT-1/default 0];
docident [serversortdir] [Select ascending of descending sort order in serverbrowser.];
docident [serversortpreferofficial] [Sort official maps over custom maps in serverbrowser.];
docargument [N] [-] [min 0/max 1/default 1];
docident [servpingrate] [];
docargument [V] [] [min 1000/max 60000/default 5000];
docident [setadmin] [Claims or drops admin status.];
docargument [B] [Status] [1 (Claim), 0 (Drop)] [0];
docargument [PASS] [Password] [case sensitive] [0];
docremark [Failed logins result in an auto kick. The admin is granted the right to kick, ban, remove bans, set autoteam, set shuffleteam, change server description (if enabled), change map, change mastermode, force team, change mode, record demos, stop demos and clear demo(s) - All without needing votes from other users. If the admin votes on any (other players) call, his vote is final. In the scoreboard, the admin will be shown as a red colour.];
docident [showallservers] [Whether servers that have not yet responded to a ping should be shown in the server list.];
docargument [V] [] [min 0/max 1/default 1];
docident [showminremain] [Show 'minutes remaining' in serverbrowser.];
docargument [N] [] [min 0/max 1/default 0];
docident [shownamesinbrowser] [Show player names in serverbrowser.];
docargument [N] [-] [min 0/max 1/default 0];
docident [showonlyfavourites] [Show only servers of one favourites category in serverbrowser.];
docargument [N] [category index] [min 0/max 100/default 0];
docident [showonlygoodservers] [Show only servers with the correct protocol in serverbrowser.];
docargument [N] [-] [min 0/max 1/default 0];
docident [showweights] [Show 'weights' in serverbrowser.];
docargument [N] [] [min 0/max 1/default 0];
docremark ['weights' are the sort criteria with the highest priority. Favourites categories can change the weights. Use 'showweights' to debug problems with serverbrowser sorting.];
docident [shuffleteams] [Shuffles the teams. The server will attempt to restore balance, but the result may be less that optimal, and there are certainly better ways to keep teams balanced.];
docsection [Game modes]
docident [coop] [Starts a map with the mode "Co-op edit"];
docargument [M] [The name of the map you wish to edit] [] [1];
docremark [See the co-op edit section in page 4 of the map editing guide for more information.];
docexample [coop ac_newmap] [];
docident [ctf] [Starts a map with the mode "Capture the Flag"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [ctf ac_mines] [];
docident [dm] [Starts a map with the mode "Deathmatch"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 10 minutes if T is 0 or not specified)] [1..60] [1];
docexample [dm ac_complex] [];
docident [gamemodedesc] [];
docargument [M] [mode] [integer] [0];
docargument [D] [description] [string] [0];
docident [htf] [Starts a map with the mode "Hunt the Flag"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [htf ac_mines] [];
docident [ktf] [Starts a map with the mode "Keep the Flag"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 10 minutes if T is 0 or not specified)] [1..60] [1];
docexample [ktf ac_mines] [];
docident [lms] [Starts a map with the mode "Last Man Standing"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 10 minutes if T is 0 or not specified)] [1..60] [1];
docexample [lms ac_complex] [];
docident [lss] [Starts a map with the mode "Last Swiss Standing"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 10 minutes if T is 0 or not specified)] [1..60] [1];
docexample [lss ac_complex] [];
docident [surv] [Starts a map with the mode "Survivor"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [surv ac_complex] [];
docident [tpf] [Starts a map with the mode "Team Pistol Frenzy"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [tpf ac_complex] [];
docident [tlss] [Starts a map with the mode "Team Last Swiss Standing"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [tlss ac_complex] [];
docident [mode] [Sets the gameplay mode to N for the next map loaded.];
docargument [N] [Team Deathmatch] [0] [0];
docargument [] [Co-op edit] [1] [0];
docargument [] [Deathmatch] [2] [0];
docargument [] [Survivor] [3] [0];
docargument [] [Team survivor] [4] [0];
docargument [] [Capture the Flag] [5] [0];
docargument [] [Pistol frenzy] [6] [0];
docargument [] [Bot team deathmatch] [7] [0];
docargument [] [Bot deathmatch] [8] [0];
docargument [] [Last swiss standing] [9] [0];
docargument [] [One shot, One kill] [10] [0];
docargument [] [Team One shot, One kill] [11] [0];
docargument [] [Bot One shot, One kill] [12] [0];
docargument [] [Hunt the Flag] [13] [0];
docargument [] [Team keep the flag] [14] [0];
docargument [] [Keep the flag] [15] [0];
docremark [You will need to define mode before loading the map or it will stay as the last mode played.];
docremark [There are many aliases for you to use instead of remembering the numeric mapping.];
docexample [mode 7; map ac_complex; echo "Bot Team Deathmatch on ac_complex"] [];
docexample [mode 8; map ac_mines 4; echo "Bot Deathmatch on ac_mines for 4 minutes"] [];
docexample [mode 5; map ac_shine; echo "CTF @ ac_shine"] [];
docident [osok] [Starts a map with the mode "One shot, One kill"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 10 minutes if T is 0 or not specified)] [1..60] [1];
docexample [osok ac_complex] [];
docident [pf] [Starts a map with the mode "Pistol Frenzy"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 10 minutes if T is 0 or not specified)] [1..60] [1];
docexample [pf ac_complex] [];
docident [tdm] [Starts a map with the mode "Team Deathmatch"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [tdm ac_complex] [];
docident [tktf] [Starts a map with the mode "Team Keep the Flag"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [tktf ac_mines] [];
docident [tosok] [Starts a map with the mode "Team One Shot, One Kill"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [tosok ac_complex] [];
docident [ts] [Starts a map with the mode "Team Survivor"];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [ts ac_complex] [];
docident [vip] [Starts a map with the mode "Hunt the Flag". Some players prefer the name "VIP" for this mode.];
docargument [M] [The name of the map you wish to play] [] [1];
docargument [T] [The time limit, in minutes (default 15 minutes if T is 0 or not specified)] [1..60] [1];
docexample [vip ac_mines] [];
docsection [Editing configs]
docident [fog] [Sets the fog distance.];
docargument [N] [The fog distance] [64...1024, default is 180] [0];
docremark [You can do this for tweaking the visual effect of the fog, or if you are on a slow machine, setting the fog to a low value can also be a very effective way to increase fps (if you are geometry limited). Try out different values on big maps / maps which give you low fps. It is also good for aesthetic features of maps especially when combined with "fogcolour".];
docident [fogcolour] [Sets the fog and clearing colour.];
docargument [C] [The colour] [Hexadecimal colour, default is 0x8099B3] [0];
docident [isolatecontext] [Isolates the given context. This disables access from this context to identifiers located in other contexts, also it removes all aliases created in this context once the running context changes];
docargument [C] [the context] [] [0];
docident [loadnotexture] [Binds a texture to be used if a slot couldn't be loaded with a given textures path.];
docargument [F] [file name of the texture to bind] [string] [0];
docremark [Binds the texture indicated in the filename to the texture slot of any textures that aren't found. The path is given exactly as with the texture-command, if it is omitted (or can't be loaded) the default is used. The default is located in packages/misc/notexture.jpg (not in packages/textures - where custom ones must reside!)];
docexample [loadnotexture // Reset to default] [];
docexample [loadnotexture "makke/black.jpg" // Any missing texture will show up black] [];
docident [loadsky] [Loads a skymap for a map.];
docargument [P] [path to the six skymap textures] [string] [0];
docremark [The available skymaps reside in packages/textures/skymaps/..];
docremark [To select a skymap you need to use the full path from "packages/" but only up to the underscore "_" in the filename.];
docexample [loadsky "textures/skymaps/makke/mountain"] [];
docident [mapmodel] [Registers a mapmodel that can be placed in maps.];
docargument [R] [The square radius of the bounding box.] [Integer] [0];
docargument [H] [The height of the bounding box.] [Integer] [0];
docargument [Z] [The initial height offset from the ground.] [Integer] [0];
docargument [0] [This integer is redundant. Leave it at zero so you don't break the command.] [0] [0];
docargument [N] [The name of the map model] [string] [0];
docremark [A mapmodel registered with this command can be placed in a map using the 'newent mapmodel' command. The bounding box is an invisible force surrounding the model, allowing players to collide against it, instead of walking through the mapmodel. For more information about this command, read mapediting5.xml.];
docremark [Example: mapmodel 4 2 4 0 "modelname"];
docremark [This mapmodel has a bounding box of 8x8x2 in size (X/Y/Z) and by default hovers 4 units above ground.];
docident [mapmodelreset] [Resets the mapmodel slots/indices to 0 for the subsequent "mapmodel" commands.];
docremark [Each subsequent mapmodel command increases it again. See config/default_map_settings.cfg for an example.];
docident [mapsound] [Defines a mapsound.];
docargument [N] [Path to the sound file] [] [0];
docargument [M] [Maximum simultaneous sounds] [default -1 (unlimited)] [0];
docremark [Registers the sound as a map-specific sound. These map-specific sounds may currently only be used with "sound" entities within a map. The first map sound registered in a map has slot/index number 0 and increases afterwards.];
docident [mapsoundreset] [Resets the mapsound slots/indices to 0 for the subsequent "mapsound" commands.];
docremark [Each subsequent mapsound command increases it again. See config/default_map_settings.cfg for an example.];
docident [md2anim] [];
docargument [A] [anim] [] [0];
docargument [F] [frame] [] [0];
docargument [R] [range] [] [0];
docargument [S] [speed] [] [0];
docident [md2emit] [];
docargument [T] [tag] [] [0];
docargument [Y] [type] [] [0];
docargument [A] [arg1] [] [0];
docargument [B] [arg2] [] [0];
docident [md2tag] [];
docargument [N] [name] [] [0];
docargument [A] [vert1] [] [0];
docargument [B] [vert2] [] [0];
docargument [C] [vert3] [] [0];
docargument [D] [vert4] [] [0];
docident [md3anim] [];
docargument [A] [anim] [] [0];
docargument [S] [startframe] [] [0];
docargument [R] [range] [] [0];
docargument [V] [speed] [] [0];
docident [md3emit] [];
docargument [T] [tag] [] [0];
docargument [Y] [type] [] [0];
docargument [A] [arg1] [] [0];
docargument [B] [arg2] [] [0];
docident [md3link] [];
docargument [P] [parentno] [] [0];
docargument [C] [childno] [] [0];
docargument [T] [tagname] [] [0];
docident [md3load] [];
docargument [M] [model] [] [0];
docident [md3skin] [];
docargument [N] [object name] [] [0];
docargument [S] [skin texture] [] [0];
docident [mdlalphatest] [];
docargument [A] [alphatest] [] [0];
docident [mdlcachelimit] [];
docargument [L] [cachelimit] [] [0];
docident [mdlcullface] [];
docargument [C] [cullface] [0||1] [0];
docident [mdlscale] [];
docargument [P] [percent] [0..100..N*100] [0];
docident [mdlshadowdist] [];
docargument [D] [shadow distance] [] [0];
docident [mdltrans] [translates (= moves) the model];
docargument [X] [] [] [0];
docargument [Y] [] [] [0];
docargument [Z] [] [] [0];
docident [mdltranslucent] [];
docargument [T] [translucency] [0..100..N*100] [0];
docident [mdlvertexlight] [];
docargument [V] [vertexligh] [0||1] [0];
docident [scriptcontext] [];
docargument [C] [context] [] [0];
docargument [N] [idname] [] [0];
docident [sealcontexts] [secure this configuration for the rest of the game];
docident [shadowyaw] [Shadow yaw specifies the angle at which shadow stencils are drawn on a map.];
docargument [D] [The angle in degrees to rotate the stencil shadows] [0...360, default is 45] [0];
docremark [When specifying shadowyaw, remember that the default angle is 45 degrees. The example below would make the shadows appear at 90 degrees (45 degrees more to the left).];
docexample [shadowyaw 90] [];
docident [texture] [Binds a texture to the current texture slot.];
docargument [S] [Scale of the texture to load (should be a power of two).] [Float] [0];
docargument [F] [File name of the texture to bind] [String] [0];
docremark [Binds the texture indicated in the filename to the current texture slot and increments the slot number.];
docremark [The texture is rendered at the given scale. At scale 1.0 (or if scale is 0), 32x32 texels cover one cube. At scale 2.0, which is the current maximum, it's 64x64.];
docident [texturereset] [Sets the texture slots/indicies to 0 for the subsequent "texture" commands.];
docremark [Each subsequent texture command increases it again. See config/default_map_settings.cfg for an example.];
docident [watercolour] [Determines the water colour in a map.];
docargument [R] [Red colour intensity] [Between 1 and 255] [0];
docargument [G] [Green colour intensity] [Between 1 and 255] [0];
docargument [B] [Blue colour intensity] [Between 1 and 255] [0];
docremark [You must define all 3 values, otherwise this command may not work correctly (use "1" as a placeholder if needed).];
docident [waveheight] [Sets the wave height of water, between 0 (completely still, no waves at all) and 1 (very choppy).];
docargument [F] [wave height (floating-point value)] [min 0/max 1/default 0.3];
docsection [TODO]
docident [addzip] [TODO: Description];
docargument [A] [TODO] [] [0];
docargument [B] [TODO] [] [0];
docargument [C] [TODO] [] [0];
docident [allowblinkingtext] [for toggling on the ability for any text to have the blinking bit set.];
docargument [T] [TOGGLE] [] [0];
docident [applydialog] [do you really want to quit?];
docargument [N] [TODO] [min 0/max 1/default 1];
docident [autoscopesens] [TODO];
docargument [N] [TODO] [min 0/max 1/default 0];
docident [delalias] [deletes the passed alias.];
docident [demonameformat] [set the formatstring for demo filenames - default: TODO (when stable)];
docargument [S] [STRING] [] [0];
docremark [we use the following internal mapping of formatchars:];
docremark [%g : gamemode (int) %G : gamemode (chr) %F : gamemode (full)];
docremark [%m : minutes remaining %M : minutes played];
docremark [%s : seconds remaining %S : seconds played];
docremark [%h : IP of server %H : hostname of server (%N : title of server (really???))];
docremark [%n : mapName];
docremark [%w : timestamp "when"];
docident [demotimeformat] [set the formatstring for demo timestamp - default: TODO (when stable)];
docargument [S] [STRING] [] [0];
docremark [same as strftime() - see http://www.cplusplus.com/reference/clibrary/ctime/strftime/ for details];
docident [demotimelocal] [use localtime (1) or GMT (0)?];
docargument [B] [BOOL] [min 0/max 1/default 0];
docident [fontskip] [At what char does the definition proceed?];
docargument [A] [TODO] [] [0];
docident [getdemonameformat] [returns the currently used formatstring for demo filenames];
docident [getdemotimeformat] [returns the currently used formatstring for demo timestamp];
docident [gettext] [An alias used for i18n. Translateable text should be marked [(_ "this is the EN-us variant of the text")].];
docargument [M] [I18Nmessage] [] [0];
docident [interms] [TODO];
docargument [N] [TODO] [min 0/max 1/default 0];
docident [mapdimsfactor] [TODO];
docargument [N] [TODO] [min 0/max 4/default 2];
docident [maxrollremote] [TODO];
docargument [N] [TODO] [min 0/max 20/default 0];
docident [mdldlist] [TODO];
docargument [N] [TODO] [min 0/max 1/default 1];
docident [menucanblink] [for toggling on the ability for menutext to have the blinking bit set. The global setting of 'allowblinkingtext' overrides this];
docargument [T] [0 || !=0] [] [0];
docident [menufont] [switch the font in which the menu is displayed];
docargument [F] [FONT] [] [0];
docident [menuitemmapload] [a menuitem that loads a map, displays the title and the preview or a default image];
docargument [M] [MAP] [] [0];
docargument [T] [TEXT] [] [0];
docident [mfilter] [TODO];
docargument [N] [TODO] [min 0,0/max 6,0/default 0,0];
docident [mouseaccel] [TODO];
docargument [N] [TODO] [min 0,0/max 1000,0/default 0,0];
docident [musicpreload] [TODO: Description];
docargument [A] [TODO] [] [0];
docident [quicknadethrow] [TODO: Description];
docident [removezip] [TODO: Description];
docargument [A] [TODO] [] [0];
docident [scopesensscale] [TODO];
docargument [N] [TODO] [min 0,001/max 1000,0/default 0,5];
docident [sensitivityscale] [TODO];
docargument [N] [TODO] [min 0,001/max 1000,0/default 1,0];
docident [setburst] [TODO: Description];
docident [setedithide] [Hides the list of entity types you set. Pass 1 for light, 2 for spawn, or use "playerstart".];
docargument [L] [list of types to hide] [] [0];
docremark [Pass light or 1, playerstart or 2. Call [setedithide 1 10] to just hide all lights and mapmodels.];
docremark [Or [setedithide [3 4 5 6 7 8 9 12 13]] for all the clips, ammo, nades, health, helmet, armour, akimbo, ladder, and flag.];
docremark [Reversly just use [1 2 10 11 13 14 15 16] to hide light, spawn, mapmodel, ladder, sound, clip, plclip.];
docremark [Only shown entity types are potential 'closest entity'.];
docident [seteditshow] [Hides all but the single entity type you give. Pass 1 for light, 2 for spawn, or use [playerstart].];
docargument [T] [type to show exclusively] [] [0];
docremark [Just run [seteditshow model] and see just the model entities.];
docremark [The other entity types are ignored as closestentity too.];
docremark [other call forms may use the numerical item type];
docident [setwptriggernr] [TODO: Description];
docargument [A] [TODO] [] [0];
docident [showedithide] [shows the settings of edithide (sparklies)];
docident [testvel] [TODO];
docargument [N] [TODO] [min 0/max 1/default 0];
